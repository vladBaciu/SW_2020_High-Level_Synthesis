// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "imGrayScale26.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic imGrayScale26::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic imGrayScale26::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<28> imGrayScale26::ap_ST_fsm_state1 = "1";
const sc_lv<28> imGrayScale26::ap_ST_fsm_state2 = "10";
const sc_lv<28> imGrayScale26::ap_ST_fsm_state3 = "100";
const sc_lv<28> imGrayScale26::ap_ST_fsm_state4 = "1000";
const sc_lv<28> imGrayScale26::ap_ST_fsm_state5 = "10000";
const sc_lv<28> imGrayScale26::ap_ST_fsm_state6 = "100000";
const sc_lv<28> imGrayScale26::ap_ST_fsm_state7 = "1000000";
const sc_lv<28> imGrayScale26::ap_ST_fsm_state8 = "10000000";
const sc_lv<28> imGrayScale26::ap_ST_fsm_state9 = "100000000";
const sc_lv<28> imGrayScale26::ap_ST_fsm_state10 = "1000000000";
const sc_lv<28> imGrayScale26::ap_ST_fsm_state11 = "10000000000";
const sc_lv<28> imGrayScale26::ap_ST_fsm_state12 = "100000000000";
const sc_lv<28> imGrayScale26::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<28> imGrayScale26::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<28> imGrayScale26::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<28> imGrayScale26::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<28> imGrayScale26::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<28> imGrayScale26::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<28> imGrayScale26::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<28> imGrayScale26::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<28> imGrayScale26::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<28> imGrayScale26::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<28> imGrayScale26::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<28> imGrayScale26::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<28> imGrayScale26::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<28> imGrayScale26::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<28> imGrayScale26::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<28> imGrayScale26::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<32> imGrayScale26::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> imGrayScale26::ap_const_lv1_1 = "1";
const sc_lv<32> imGrayScale26::ap_const_lv32_2 = "10";
const sc_lv<1> imGrayScale26::ap_const_lv1_0 = "0";
const sc_lv<32> imGrayScale26::ap_const_lv32_E = "1110";
const sc_lv<32> imGrayScale26::ap_const_lv32_13 = "10011";
const sc_lv<32> imGrayScale26::ap_const_lv32_1 = "1";
const sc_lv<32> imGrayScale26::ap_const_lv32_3 = "11";
const sc_lv<32> imGrayScale26::ap_const_lv32_8 = "1000";
const sc_lv<32> imGrayScale26::ap_const_lv32_D = "1101";
const sc_lv<32> imGrayScale26::ap_const_lv32_18 = "11000";
const sc_lv<32> imGrayScale26::ap_const_lv32_19 = "11001";
const sc_lv<32> imGrayScale26::ap_const_lv32_1A = "11010";
const sc_lv<11> imGrayScale26::ap_const_lv11_0 = "00000000000";
const sc_lv<64> imGrayScale26::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> imGrayScale26::ap_const_lv32_1B = "11011";
const sc_lv<32> imGrayScale26::ap_const_lv32_F = "1111";
const sc_lv<32> imGrayScale26::ap_const_lv32_14 = "10100";
const sc_lv<64> imGrayScale26::ap_const_lv64_3FBD2F1A9FBE76C9 = "11111110111101001011110001101010011111101111100111011011001001";
const sc_lv<64> imGrayScale26::ap_const_lv64_3FE2C8B439581062 = "11111111100010110010001011010000111001010110000001000001100010";
const sc_lv<32> imGrayScale26::ap_const_lv32_9 = "1001";
const sc_lv<64> imGrayScale26::ap_const_lv64_3FD322D0E5604189 = "11111111010011001000101101000011100101011000000100000110001001";
const sc_lv<64> imGrayScale26::ap_const_lv64_4B0 = "10010110000";
const sc_lv<11> imGrayScale26::ap_const_lv11_1 = "1";
const sc_lv<32> imGrayScale26::ap_const_lv32_10 = "10000";
const sc_lv<32> imGrayScale26::ap_const_lv32_17 = "10111";
const sc_lv<32> imGrayScale26::ap_const_lv32_34 = "110100";
const sc_lv<32> imGrayScale26::ap_const_lv32_3E = "111110";
const sc_lv<12> imGrayScale26::ap_const_lv12_C01 = "110000000001";
const sc_lv<32> imGrayScale26::ap_const_lv32_B = "1011";
const sc_lv<11> imGrayScale26::ap_const_lv11_3FF = "1111111111";
const sc_lv<32> imGrayScale26::ap_const_lv32_3B = "111011";

imGrayScale26::imGrayScale26(sc_module_name name) : sc_module(name), mVcdFile(0) {
    imTemplateMatchinbkb_U1 = new imTemplateMatchinbkb<1,5,64,64,64>("imTemplateMatchinbkb_U1");
    imTemplateMatchinbkb_U1->clk(ap_clk);
    imTemplateMatchinbkb_U1->reset(ap_rst);
    imTemplateMatchinbkb_U1->din0(grp_fu_153_p0);
    imTemplateMatchinbkb_U1->din1(grp_fu_153_p1);
    imTemplateMatchinbkb_U1->ce(ap_var_for_const0);
    imTemplateMatchinbkb_U1->dout(grp_fu_153_p2);
    imTemplateMatchincud_U2 = new imTemplateMatchincud<1,6,64,64,64>("imTemplateMatchincud_U2");
    imTemplateMatchincud_U2->clk(ap_clk);
    imTemplateMatchincud_U2->reset(ap_rst);
    imTemplateMatchincud_U2->din0(grp_fu_157_p0);
    imTemplateMatchincud_U2->din1(grp_fu_157_p1);
    imTemplateMatchincud_U2->ce(ap_var_for_const0);
    imTemplateMatchincud_U2->dout(grp_fu_157_p2);
    imTemplateMatchincud_U3 = new imTemplateMatchincud<1,6,64,64,64>("imTemplateMatchincud_U3");
    imTemplateMatchincud_U3->clk(ap_clk);
    imTemplateMatchincud_U3->reset(ap_rst);
    imTemplateMatchincud_U3->din0(tmp_26_reg_466);
    imTemplateMatchincud_U3->din1(ap_var_for_const1);
    imTemplateMatchincud_U3->ce(ap_var_for_const0);
    imTemplateMatchincud_U3->dout(grp_fu_162_p2);
    imTemplateMatchindEe_U4 = new imTemplateMatchindEe<1,6,32,64>("imTemplateMatchindEe_U4");
    imTemplateMatchindEe_U4->clk(ap_clk);
    imTemplateMatchindEe_U4->reset(ap_rst);
    imTemplateMatchindEe_U4->din0(grp_fu_168_p0);
    imTemplateMatchindEe_U4->ce(ap_var_for_const0);
    imTemplateMatchindEe_U4->dout(grp_fu_168_p1);
    imTemplateMatchindEe_U5 = new imTemplateMatchindEe<1,6,32,64>("imTemplateMatchindEe_U5");
    imTemplateMatchindEe_U5->clk(ap_clk);
    imTemplateMatchindEe_U5->reset(ap_rst);
    imTemplateMatchindEe_U5->din0(grp_fu_171_p0);
    imTemplateMatchindEe_U5->ce(ap_var_for_const0);
    imTemplateMatchindEe_U5->dout(grp_fu_171_p1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state25);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state26);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state27);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state28);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_s_fu_194_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_s_fu_194_p2 );

    SC_METHOD(thread_col_1_fu_214_p2);
    sensitive << ( col_reg_142 );

    SC_METHOD(thread_grp_fu_153_p0);
    sensitive << ( reg_174 );
    sensitive << ( tmp_28_reg_486 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state21 );

    SC_METHOD(thread_grp_fu_153_p1);
    sensitive << ( reg_174 );
    sensitive << ( tmp_27_reg_481 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state21 );

    SC_METHOD(thread_grp_fu_157_p0);
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( tmp_22_reg_461 );
    sensitive << ( tmp_29_reg_476 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_grp_fu_157_p1);
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_grp_fu_168_p0);
    sensitive << ( tmp_21_cast_fu_253_p1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_30_cast_fu_261_p1 );

    SC_METHOD(thread_grp_fu_171_p0);
    sensitive << ( tmp_24_cast_reg_441 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_imINPUT_blk_n);
    sensitive << ( imINPUT_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_18_fu_209_p2 );

    SC_METHOD(thread_imINPUT_read);
    sensitive << ( imINPUT_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_18_fu_209_p2 );

    SC_METHOD(thread_imOUTPUT_address0);
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( tmp_50_cast_fu_382_p1 );

    SC_METHOD(thread_imOUTPUT_ce0);
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state28 );

    SC_METHOD(thread_imOUTPUT_d0);
    sensitive << ( result_V_reg_502 );
    sensitive << ( ap_CS_fsm_state27 );

    SC_METHOD(thread_imOUTPUT_we0);
    sensitive << ( ap_CS_fsm_state27 );

    SC_METHOD(thread_isNeg_fu_303_p3);
    sensitive << ( sh_assign_fu_297_p2 );

    SC_METHOD(thread_loc_V_8_fu_279_p1);
    sensitive << ( p_Val2_s_fu_265_p1 );

    SC_METHOD(thread_next_mul_fu_184_p2);
    sensitive << ( phi_mul_reg_131 );

    SC_METHOD(thread_p_Result_s_fu_283_p3);
    sensitive << ( loc_V_8_reg_497 );

    SC_METHOD(thread_p_Val2_s_fu_265_p1);
    sensitive << ( grp_fu_153_p2 );

    SC_METHOD(thread_result_V_fu_374_p3);
    sensitive << ( isNeg_fu_303_p3 );
    sensitive << ( tmp_44_fu_360_p1 );
    sensitive << ( tmp_45_fu_364_p4 );

    SC_METHOD(thread_row_4_fu_199_p2);
    sensitive << ( row_reg_120 );

    SC_METHOD(thread_sh_assign_1_i_i_cast_fu_328_p1);
    sensitive << ( sh_assign_8_fu_320_p3 );

    SC_METHOD(thread_sh_assign_8_fu_320_p3);
    sensitive << ( sh_assign_fu_297_p2 );
    sensitive << ( isNeg_fu_303_p3 );
    sensitive << ( tmp_i_i_cast_fu_316_p1 );

    SC_METHOD(thread_sh_assign_fu_297_p2);
    sensitive << ( tmp_i_i_i_cast_fu_294_p1 );

    SC_METHOD(thread_tmp_17_fu_205_p1);
    sensitive << ( col_reg_142 );

    SC_METHOD(thread_tmp_18_fu_209_p2);
    sensitive << ( imINPUT_empty_n );
    sensitive << ( imWidth );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_18_fu_209_p2 );
    sensitive << ( tmp_17_fu_205_p1 );

    SC_METHOD(thread_tmp_20_cast_fu_220_p1);
    sensitive << ( col_reg_142 );

    SC_METHOD(thread_tmp_21_cast_fu_253_p1);
    sensitive << ( tmp_64_reg_436 );

    SC_METHOD(thread_tmp_30_cast_fu_261_p1);
    sensitive << ( tmp_29_cast_reg_446 );

    SC_METHOD(thread_tmp_43_fu_224_p2);
    sensitive << ( tmp_63_reg_405 );
    sensitive << ( tmp_20_cast_fu_220_p1 );

    SC_METHOD(thread_tmp_44_fu_360_p1);
    sensitive << ( tmp_67_fu_352_p3 );

    SC_METHOD(thread_tmp_45_fu_364_p4);
    sensitive << ( tmp_63_i_i_fu_346_p2 );

    SC_METHOD(thread_tmp_50_cast_fu_382_p1);
    sensitive << ( tmp_43_reg_431 );

    SC_METHOD(thread_tmp_61_i_i_cast_fu_336_p1);
    sensitive << ( sh_assign_1_i_i_cast_fu_328_p1 );

    SC_METHOD(thread_tmp_61_i_i_fu_332_p1);
    sensitive << ( sh_assign_1_i_i_cast_fu_328_p1 );

    SC_METHOD(thread_tmp_62_i_i_fu_340_p2);
    sensitive << ( p_Result_s_fu_283_p3 );
    sensitive << ( tmp_61_i_i_cast_fu_336_p1 );

    SC_METHOD(thread_tmp_63_fu_180_p1);
    sensitive << ( phi_mul_reg_131 );

    SC_METHOD(thread_tmp_63_i_i_fu_346_p2);
    sensitive << ( tmp_i_i_fu_290_p1 );
    sensitive << ( tmp_61_i_i_fu_332_p1 );

    SC_METHOD(thread_tmp_64_fu_229_p1);
    sensitive << ( imINPUT_dout );

    SC_METHOD(thread_tmp_67_fu_352_p3);
    sensitive << ( tmp_62_i_i_fu_340_p2 );

    SC_METHOD(thread_tmp_fu_190_p1);
    sensitive << ( row_reg_120 );

    SC_METHOD(thread_tmp_i_i_17_fu_311_p2);
    sensitive << ( loc_V_reg_491 );

    SC_METHOD(thread_tmp_i_i_cast_fu_316_p1);
    sensitive << ( tmp_i_i_17_fu_311_p2 );

    SC_METHOD(thread_tmp_i_i_fu_290_p1);
    sensitive << ( p_Result_s_fu_283_p3 );

    SC_METHOD(thread_tmp_i_i_i_cast_fu_294_p1);
    sensitive << ( loc_V_reg_491 );

    SC_METHOD(thread_tmp_s_fu_194_p2);
    sensitive << ( imHeight );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_fu_190_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( imINPUT_empty_n );
    sensitive << ( tmp_18_fu_209_p2 );
    sensitive << ( tmp_s_fu_194_p2 );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    ap_CS_fsm = "0000000000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "imGrayScale26_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, imINPUT_dout, "(port)imINPUT_dout");
    sc_trace(mVcdFile, imINPUT_empty_n, "(port)imINPUT_empty_n");
    sc_trace(mVcdFile, imINPUT_read, "(port)imINPUT_read");
    sc_trace(mVcdFile, imOUTPUT_address0, "(port)imOUTPUT_address0");
    sc_trace(mVcdFile, imOUTPUT_ce0, "(port)imOUTPUT_ce0");
    sc_trace(mVcdFile, imOUTPUT_we0, "(port)imOUTPUT_we0");
    sc_trace(mVcdFile, imOUTPUT_d0, "(port)imOUTPUT_d0");
    sc_trace(mVcdFile, imHeight, "(port)imHeight");
    sc_trace(mVcdFile, imWidth, "(port)imWidth");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, imINPUT_blk_n, "imINPUT_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_18_fu_209_p2, "tmp_18_fu_209_p2");
    sc_trace(mVcdFile, grp_fu_157_p2, "grp_fu_157_p2");
    sc_trace(mVcdFile, reg_174, "reg_174");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, tmp_63_fu_180_p1, "tmp_63_fu_180_p1");
    sc_trace(mVcdFile, tmp_63_reg_405, "tmp_63_reg_405");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, next_mul_fu_184_p2, "next_mul_fu_184_p2");
    sc_trace(mVcdFile, next_mul_reg_410, "next_mul_reg_410");
    sc_trace(mVcdFile, row_4_fu_199_p2, "row_4_fu_199_p2");
    sc_trace(mVcdFile, row_4_reg_418, "row_4_reg_418");
    sc_trace(mVcdFile, col_1_fu_214_p2, "col_1_fu_214_p2");
    sc_trace(mVcdFile, col_1_reg_426, "col_1_reg_426");
    sc_trace(mVcdFile, tmp_43_fu_224_p2, "tmp_43_fu_224_p2");
    sc_trace(mVcdFile, tmp_43_reg_431, "tmp_43_reg_431");
    sc_trace(mVcdFile, tmp_64_fu_229_p1, "tmp_64_fu_229_p1");
    sc_trace(mVcdFile, tmp_64_reg_436, "tmp_64_reg_436");
    sc_trace(mVcdFile, tmp_24_cast_reg_441, "tmp_24_cast_reg_441");
    sc_trace(mVcdFile, tmp_29_cast_reg_446, "tmp_29_cast_reg_446");
    sc_trace(mVcdFile, tmp_21_cast_fu_253_p1, "tmp_21_cast_fu_253_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, grp_fu_168_p1, "grp_fu_168_p1");
    sc_trace(mVcdFile, tmp_22_reg_461, "tmp_22_reg_461");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, grp_fu_171_p1, "grp_fu_171_p1");
    sc_trace(mVcdFile, tmp_26_reg_466, "tmp_26_reg_466");
    sc_trace(mVcdFile, tmp_30_cast_fu_261_p1, "tmp_30_cast_fu_261_p1");
    sc_trace(mVcdFile, tmp_29_reg_476, "tmp_29_reg_476");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, grp_fu_162_p2, "grp_fu_162_p2");
    sc_trace(mVcdFile, tmp_27_reg_481, "tmp_27_reg_481");
    sc_trace(mVcdFile, grp_fu_153_p2, "grp_fu_153_p2");
    sc_trace(mVcdFile, tmp_28_reg_486, "tmp_28_reg_486");
    sc_trace(mVcdFile, loc_V_reg_491, "loc_V_reg_491");
    sc_trace(mVcdFile, ap_CS_fsm_state25, "ap_CS_fsm_state25");
    sc_trace(mVcdFile, loc_V_8_fu_279_p1, "loc_V_8_fu_279_p1");
    sc_trace(mVcdFile, loc_V_8_reg_497, "loc_V_8_reg_497");
    sc_trace(mVcdFile, result_V_fu_374_p3, "result_V_fu_374_p3");
    sc_trace(mVcdFile, result_V_reg_502, "result_V_reg_502");
    sc_trace(mVcdFile, ap_CS_fsm_state26, "ap_CS_fsm_state26");
    sc_trace(mVcdFile, ap_CS_fsm_state27, "ap_CS_fsm_state27");
    sc_trace(mVcdFile, row_reg_120, "row_reg_120");
    sc_trace(mVcdFile, phi_mul_reg_131, "phi_mul_reg_131");
    sc_trace(mVcdFile, col_reg_142, "col_reg_142");
    sc_trace(mVcdFile, tmp_s_fu_194_p2, "tmp_s_fu_194_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state28, "ap_CS_fsm_state28");
    sc_trace(mVcdFile, tmp_50_cast_fu_382_p1, "tmp_50_cast_fu_382_p1");
    sc_trace(mVcdFile, grp_fu_153_p0, "grp_fu_153_p0");
    sc_trace(mVcdFile, grp_fu_153_p1, "grp_fu_153_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, grp_fu_157_p0, "grp_fu_157_p0");
    sc_trace(mVcdFile, grp_fu_157_p1, "grp_fu_157_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, grp_fu_168_p0, "grp_fu_168_p0");
    sc_trace(mVcdFile, grp_fu_171_p0, "grp_fu_171_p0");
    sc_trace(mVcdFile, tmp_fu_190_p1, "tmp_fu_190_p1");
    sc_trace(mVcdFile, tmp_17_fu_205_p1, "tmp_17_fu_205_p1");
    sc_trace(mVcdFile, tmp_20_cast_fu_220_p1, "tmp_20_cast_fu_220_p1");
    sc_trace(mVcdFile, p_Val2_s_fu_265_p1, "p_Val2_s_fu_265_p1");
    sc_trace(mVcdFile, p_Result_s_fu_283_p3, "p_Result_s_fu_283_p3");
    sc_trace(mVcdFile, tmp_i_i_i_cast_fu_294_p1, "tmp_i_i_i_cast_fu_294_p1");
    sc_trace(mVcdFile, sh_assign_fu_297_p2, "sh_assign_fu_297_p2");
    sc_trace(mVcdFile, tmp_i_i_17_fu_311_p2, "tmp_i_i_17_fu_311_p2");
    sc_trace(mVcdFile, isNeg_fu_303_p3, "isNeg_fu_303_p3");
    sc_trace(mVcdFile, tmp_i_i_cast_fu_316_p1, "tmp_i_i_cast_fu_316_p1");
    sc_trace(mVcdFile, sh_assign_8_fu_320_p3, "sh_assign_8_fu_320_p3");
    sc_trace(mVcdFile, sh_assign_1_i_i_cast_fu_328_p1, "sh_assign_1_i_i_cast_fu_328_p1");
    sc_trace(mVcdFile, tmp_61_i_i_cast_fu_336_p1, "tmp_61_i_i_cast_fu_336_p1");
    sc_trace(mVcdFile, tmp_i_i_fu_290_p1, "tmp_i_i_fu_290_p1");
    sc_trace(mVcdFile, tmp_61_i_i_fu_332_p1, "tmp_61_i_i_fu_332_p1");
    sc_trace(mVcdFile, tmp_62_i_i_fu_340_p2, "tmp_62_i_i_fu_340_p2");
    sc_trace(mVcdFile, tmp_67_fu_352_p3, "tmp_67_fu_352_p3");
    sc_trace(mVcdFile, tmp_63_i_i_fu_346_p2, "tmp_63_i_i_fu_346_p2");
    sc_trace(mVcdFile, tmp_44_fu_360_p1, "tmp_44_fu_360_p1");
    sc_trace(mVcdFile, tmp_45_fu_364_p4, "tmp_45_fu_364_p4");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

imGrayScale26::~imGrayScale26() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete imTemplateMatchinbkb_U1;
    delete imTemplateMatchincud_U2;
    delete imTemplateMatchincud_U3;
    delete imTemplateMatchindEe_U4;
    delete imTemplateMatchindEe_U5;
}

void imGrayScale26::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void imGrayScale26::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv64_3FD322D0E5604189;
}

void imGrayScale26::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state28.read()))) {
        col_reg_142 = col_1_reg_426.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_fu_194_p2.read()))) {
        col_reg_142 = ap_const_lv11_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(tmp_18_fu_209_p2.read(), ap_const_lv1_0) && 
         !(!esl_seteq<1,1,1>(tmp_18_fu_209_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(imINPUT_empty_n.read(), ap_const_logic_0)))) {
        phi_mul_reg_131 = next_mul_reg_410.read();
    } else if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        phi_mul_reg_131 = ap_const_lv64_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(tmp_18_fu_209_p2.read(), ap_const_lv1_0) && 
         !(!esl_seteq<1,1,1>(tmp_18_fu_209_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(imINPUT_empty_n.read(), ap_const_logic_0)))) {
        row_reg_120 = row_4_reg_418.read();
    } else if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        row_reg_120 = ap_const_lv11_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read()) && !(!esl_seteq<1,1,1>(tmp_18_fu_209_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(imINPUT_empty_n.read(), ap_const_logic_0)))) {
        col_1_reg_426 = col_1_fu_214_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state25.read()))) {
        loc_V_8_reg_497 = loc_V_8_fu_279_p1.read();
        loc_V_reg_491 = p_Val2_s_fu_265_p1.read().range(62, 52);
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()))) {
        next_mul_reg_410 = next_mul_fu_184_p2.read();
        row_4_reg_418 = row_4_fu_199_p2.read();
        tmp_63_reg_405 = tmp_63_fu_180_p1.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state15.read())) || (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state20.read())))) {
        reg_174 = grp_fu_157_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state26.read()))) {
        result_V_reg_502 = result_V_fu_374_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read()))) {
        tmp_22_reg_461 = grp_fu_168_p1.read();
        tmp_26_reg_466 = grp_fu_171_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read()) && !esl_seteq<1,1,1>(tmp_18_fu_209_p2.read(), ap_const_lv1_0) && !(!esl_seteq<1,1,1>(tmp_18_fu_209_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(imINPUT_empty_n.read(), ap_const_logic_0)))) {
        tmp_24_cast_reg_441 = imINPUT_dout.read().range(15, 8);
        tmp_29_cast_reg_446 = imINPUT_dout.read().range(23, 16);
        tmp_43_reg_431 = tmp_43_fu_224_p2.read();
        tmp_64_reg_436 = tmp_64_fu_229_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state15.read()))) {
        tmp_27_reg_481 = grp_fu_162_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state20.read()))) {
        tmp_28_reg_486 = grp_fu_153_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state14.read()))) {
        tmp_29_reg_476 = grp_fu_168_p1.read();
    }
}

void imGrayScale26::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read().range(0, 0);
}

void imGrayScale26::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read().range(9, 9);
}

void imGrayScale26::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read().range(13, 13);
}

void imGrayScale26::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read().range(14, 14);
}

void imGrayScale26::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read().range(15, 15);
}

void imGrayScale26::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read().range(1, 1);
}

void imGrayScale26::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read().range(19, 19);
}

void imGrayScale26::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read().range(20, 20);
}

void imGrayScale26::thread_ap_CS_fsm_state25() {
    ap_CS_fsm_state25 = ap_CS_fsm.read().range(24, 24);
}

void imGrayScale26::thread_ap_CS_fsm_state26() {
    ap_CS_fsm_state26 = ap_CS_fsm.read().range(25, 25);
}

void imGrayScale26::thread_ap_CS_fsm_state27() {
    ap_CS_fsm_state27 = ap_CS_fsm.read().range(26, 26);
}

void imGrayScale26::thread_ap_CS_fsm_state28() {
    ap_CS_fsm_state28 = ap_CS_fsm.read().range(27, 27);
}

void imGrayScale26::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read().range(2, 2);
}

void imGrayScale26::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read().range(3, 3);
}

void imGrayScale26::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read().range(8, 8);
}

void imGrayScale26::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_fu_194_p2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void imGrayScale26::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void imGrayScale26::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_fu_194_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void imGrayScale26::thread_col_1_fu_214_p2() {
    col_1_fu_214_p2 = (!col_reg_142.read().is_01() || !ap_const_lv11_1.is_01())? sc_lv<11>(): (sc_biguint<11>(col_reg_142.read()) + sc_biguint<11>(ap_const_lv11_1));
}

void imGrayScale26::thread_grp_fu_153_p0() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state21.read()))) {
        grp_fu_153_p0 = tmp_28_reg_486.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state16.read()))) {
        grp_fu_153_p0 = reg_174.read();
    } else {
        grp_fu_153_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void imGrayScale26::thread_grp_fu_153_p1() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state21.read()))) {
        grp_fu_153_p1 = reg_174.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state16.read()))) {
        grp_fu_153_p1 = tmp_27_reg_481.read();
    } else {
        grp_fu_153_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void imGrayScale26::thread_grp_fu_157_p0() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state15.read()))) {
        grp_fu_157_p0 = tmp_29_reg_476.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()))) {
        grp_fu_157_p0 = tmp_22_reg_461.read();
    } else {
        grp_fu_157_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void imGrayScale26::thread_grp_fu_157_p1() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state15.read()))) {
        grp_fu_157_p1 = ap_const_lv64_3FE2C8B439581062;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state10.read()))) {
        grp_fu_157_p1 = ap_const_lv64_3FBD2F1A9FBE76C9;
    } else {
        grp_fu_157_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void imGrayScale26::thread_grp_fu_168_p0() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read()))) {
        grp_fu_168_p0 = tmp_30_cast_fu_261_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()))) {
        grp_fu_168_p0 = tmp_21_cast_fu_253_p1.read();
    } else {
        grp_fu_168_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void imGrayScale26::thread_grp_fu_171_p0() {
    grp_fu_171_p0 = esl_zext<32,8>(tmp_24_cast_reg_441.read());
}

void imGrayScale26::thread_imINPUT_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read()) && 
         !esl_seteq<1,1,1>(tmp_18_fu_209_p2.read(), ap_const_lv1_0))) {
        imINPUT_blk_n = imINPUT_empty_n.read();
    } else {
        imINPUT_blk_n = ap_const_logic_1;
    }
}

void imGrayScale26::thread_imINPUT_read() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read()) && 
         !esl_seteq<1,1,1>(tmp_18_fu_209_p2.read(), ap_const_lv1_0) && 
         !(!esl_seteq<1,1,1>(tmp_18_fu_209_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(imINPUT_empty_n.read(), ap_const_logic_0)))) {
        imINPUT_read = ap_const_logic_1;
    } else {
        imINPUT_read = ap_const_logic_0;
    }
}

void imGrayScale26::thread_imOUTPUT_address0() {
    imOUTPUT_address0 =  (sc_lv<21>) (tmp_50_cast_fu_382_p1.read());
}

void imGrayScale26::thread_imOUTPUT_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state27.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state28.read())))) {
        imOUTPUT_ce0 = ap_const_logic_1;
    } else {
        imOUTPUT_ce0 = ap_const_logic_0;
    }
}

void imGrayScale26::thread_imOUTPUT_d0() {
    imOUTPUT_d0 = esl_concat<24,8>(esl_concat<16,8>(esl_concat<8,8>(result_V_reg_502.read(), result_V_reg_502.read()), result_V_reg_502.read()), result_V_reg_502.read());
}

void imGrayScale26::thread_imOUTPUT_we0() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state27.read())))) {
        imOUTPUT_we0 = ap_const_logic_1;
    } else {
        imOUTPUT_we0 = ap_const_logic_0;
    }
}

void imGrayScale26::thread_isNeg_fu_303_p3() {
    isNeg_fu_303_p3 = sh_assign_fu_297_p2.read().range(11, 11);
}

void imGrayScale26::thread_loc_V_8_fu_279_p1() {
    loc_V_8_fu_279_p1 = p_Val2_s_fu_265_p1.read().range(52-1, 0);
}

void imGrayScale26::thread_next_mul_fu_184_p2() {
    next_mul_fu_184_p2 = (!ap_const_lv64_4B0.is_01() || !phi_mul_reg_131.read().is_01())? sc_lv<64>(): (sc_biguint<64>(ap_const_lv64_4B0) + sc_biguint<64>(phi_mul_reg_131.read()));
}

void imGrayScale26::thread_p_Result_s_fu_283_p3() {
    p_Result_s_fu_283_p3 = esl_concat<1,52>(ap_const_lv1_1, loc_V_8_reg_497.read());
}

void imGrayScale26::thread_p_Val2_s_fu_265_p1() {
    p_Val2_s_fu_265_p1 = grp_fu_153_p2.read();
}

void imGrayScale26::thread_result_V_fu_374_p3() {
    result_V_fu_374_p3 = (!isNeg_fu_303_p3.read()[0].is_01())? sc_lv<8>(): ((isNeg_fu_303_p3.read()[0].to_bool())? tmp_44_fu_360_p1.read(): tmp_45_fu_364_p4.read());
}

void imGrayScale26::thread_row_4_fu_199_p2() {
    row_4_fu_199_p2 = (!ap_const_lv11_1.is_01() || !row_reg_120.read().is_01())? sc_lv<11>(): (sc_biguint<11>(ap_const_lv11_1) + sc_biguint<11>(row_reg_120.read()));
}

void imGrayScale26::thread_sh_assign_1_i_i_cast_fu_328_p1() {
    sh_assign_1_i_i_cast_fu_328_p1 = esl_sext<32,12>(sh_assign_8_fu_320_p3.read());
}

void imGrayScale26::thread_sh_assign_8_fu_320_p3() {
    sh_assign_8_fu_320_p3 = (!isNeg_fu_303_p3.read()[0].is_01())? sc_lv<12>(): ((isNeg_fu_303_p3.read()[0].to_bool())? tmp_i_i_cast_fu_316_p1.read(): sh_assign_fu_297_p2.read());
}

void imGrayScale26::thread_sh_assign_fu_297_p2() {
    sh_assign_fu_297_p2 = (!ap_const_lv12_C01.is_01() || !tmp_i_i_i_cast_fu_294_p1.read().is_01())? sc_lv<12>(): (sc_bigint<12>(ap_const_lv12_C01) + sc_biguint<12>(tmp_i_i_i_cast_fu_294_p1.read()));
}

void imGrayScale26::thread_tmp_17_fu_205_p1() {
    tmp_17_fu_205_p1 = esl_sext<32,11>(col_reg_142.read());
}

void imGrayScale26::thread_tmp_18_fu_209_p2() {
    tmp_18_fu_209_p2 = (!tmp_17_fu_205_p1.read().is_01() || !imWidth.read().is_01())? sc_lv<1>(): (sc_bigint<32>(tmp_17_fu_205_p1.read()) < sc_bigint<32>(imWidth.read()));
}

void imGrayScale26::thread_tmp_20_cast_fu_220_p1() {
    tmp_20_cast_fu_220_p1 = esl_sext<22,11>(col_reg_142.read());
}

void imGrayScale26::thread_tmp_21_cast_fu_253_p1() {
    tmp_21_cast_fu_253_p1 = esl_zext<32,8>(tmp_64_reg_436.read());
}

void imGrayScale26::thread_tmp_30_cast_fu_261_p1() {
    tmp_30_cast_fu_261_p1 = esl_zext<32,8>(tmp_29_cast_reg_446.read());
}

void imGrayScale26::thread_tmp_43_fu_224_p2() {
    tmp_43_fu_224_p2 = (!tmp_20_cast_fu_220_p1.read().is_01() || !tmp_63_reg_405.read().is_01())? sc_lv<22>(): (sc_bigint<22>(tmp_20_cast_fu_220_p1.read()) + sc_biguint<22>(tmp_63_reg_405.read()));
}

void imGrayScale26::thread_tmp_44_fu_360_p1() {
    tmp_44_fu_360_p1 = esl_zext<8,1>(tmp_67_fu_352_p3.read());
}

void imGrayScale26::thread_tmp_45_fu_364_p4() {
    tmp_45_fu_364_p4 = tmp_63_i_i_fu_346_p2.read().range(59, 52);
}

void imGrayScale26::thread_tmp_50_cast_fu_382_p1() {
    tmp_50_cast_fu_382_p1 = esl_zext<64,22>(tmp_43_reg_431.read());
}

void imGrayScale26::thread_tmp_61_i_i_cast_fu_336_p1() {
    tmp_61_i_i_cast_fu_336_p1 = esl_zext<53,32>(sh_assign_1_i_i_cast_fu_328_p1.read());
}

void imGrayScale26::thread_tmp_61_i_i_fu_332_p1() {
    tmp_61_i_i_fu_332_p1 = esl_zext<112,32>(sh_assign_1_i_i_cast_fu_328_p1.read());
}

void imGrayScale26::thread_tmp_62_i_i_fu_340_p2() {
    tmp_62_i_i_fu_340_p2 = (!tmp_61_i_i_cast_fu_336_p1.read().is_01())? sc_lv<53>(): p_Result_s_fu_283_p3.read() >> (unsigned short)tmp_61_i_i_cast_fu_336_p1.read().to_uint();
}

void imGrayScale26::thread_tmp_63_fu_180_p1() {
    tmp_63_fu_180_p1 = phi_mul_reg_131.read().range(22-1, 0);
}

void imGrayScale26::thread_tmp_63_i_i_fu_346_p2() {
    tmp_63_i_i_fu_346_p2 = (!tmp_61_i_i_fu_332_p1.read().is_01())? sc_lv<112>(): tmp_i_i_fu_290_p1.read() << (unsigned short)tmp_61_i_i_fu_332_p1.read().to_uint();
}

void imGrayScale26::thread_tmp_64_fu_229_p1() {
    tmp_64_fu_229_p1 = imINPUT_dout.read().range(8-1, 0);
}

void imGrayScale26::thread_tmp_67_fu_352_p3() {
    tmp_67_fu_352_p3 = tmp_62_i_i_fu_340_p2.read().range(52, 52);
}

void imGrayScale26::thread_tmp_fu_190_p1() {
    tmp_fu_190_p1 = esl_sext<32,11>(row_reg_120.read());
}

void imGrayScale26::thread_tmp_i_i_17_fu_311_p2() {
    tmp_i_i_17_fu_311_p2 = (!ap_const_lv11_3FF.is_01() || !loc_V_reg_491.read().is_01())? sc_lv<11>(): (sc_biguint<11>(ap_const_lv11_3FF) - sc_biguint<11>(loc_V_reg_491.read()));
}

void imGrayScale26::thread_tmp_i_i_cast_fu_316_p1() {
    tmp_i_i_cast_fu_316_p1 = esl_sext<12,11>(tmp_i_i_17_fu_311_p2.read());
}

void imGrayScale26::thread_tmp_i_i_fu_290_p1() {
    tmp_i_i_fu_290_p1 = esl_zext<112,53>(p_Result_s_fu_283_p3.read());
}

void imGrayScale26::thread_tmp_i_i_i_cast_fu_294_p1() {
    tmp_i_i_i_cast_fu_294_p1 = esl_zext<12,11>(loc_V_reg_491.read());
}

void imGrayScale26::thread_tmp_s_fu_194_p2() {
    tmp_s_fu_194_p2 = (!tmp_fu_190_p1.read().is_01() || !imHeight.read().is_01())? sc_lv<1>(): (sc_bigint<32>(tmp_fu_190_p1.read()) < sc_bigint<32>(imHeight.read()));
}

void imGrayScale26::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_fu_194_p2.read())) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(tmp_18_fu_209_p2.read(), ap_const_lv1_0) && !(!esl_seteq<1,1,1>(tmp_18_fu_209_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(imINPUT_empty_n.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else if ((!esl_seteq<1,1,1>(tmp_18_fu_209_p2.read(), ap_const_lv1_0) && !(!esl_seteq<1,1,1>(tmp_18_fu_209_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(imINPUT_empty_n.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        case 134217728 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<28>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

