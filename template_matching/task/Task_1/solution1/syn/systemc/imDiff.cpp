// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "imDiff.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic imDiff::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic imDiff::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<9> imDiff::ap_ST_fsm_state1 = "1";
const sc_lv<9> imDiff::ap_ST_fsm_state2 = "10";
const sc_lv<9> imDiff::ap_ST_fsm_state3 = "100";
const sc_lv<9> imDiff::ap_ST_fsm_state4 = "1000";
const sc_lv<9> imDiff::ap_ST_fsm_state5 = "10000";
const sc_lv<9> imDiff::ap_ST_fsm_state6 = "100000";
const sc_lv<9> imDiff::ap_ST_fsm_state7 = "1000000";
const sc_lv<9> imDiff::ap_ST_fsm_state8 = "10000000";
const sc_lv<9> imDiff::ap_ST_fsm_state9 = "100000000";
const sc_lv<32> imDiff::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> imDiff::ap_const_lv1_1 = "1";
const sc_lv<32> imDiff::ap_const_lv32_1 = "1";
const sc_lv<32> imDiff::ap_const_lv32_2 = "10";
const sc_lv<32> imDiff::ap_const_lv32_3 = "11";
const sc_lv<1> imDiff::ap_const_lv1_0 = "0";
const sc_lv<32> imDiff::ap_const_lv32_4 = "100";
const sc_lv<32> imDiff::ap_const_lv32_7 = "111";
const sc_lv<32> imDiff::ap_const_lv32_8 = "1000";
const sc_lv<31> imDiff::ap_const_lv31_0 = "0000000000000000000000000000000";
const sc_lv<42> imDiff::ap_const_lv42_0 = "000000000000000000000000000000000000000000";
const sc_lv<32> imDiff::ap_const_lv32_5 = "101";
const sc_lv<32> imDiff::ap_const_lv32_6 = "110";
const sc_lv<31> imDiff::ap_const_lv31_1 = "1";
const sc_lv<42> imDiff::ap_const_lv42_4B0 = "10010110000";
const sc_lv<22> imDiff::ap_const_lv22_4B0 = "10010110000";
const sc_lv<9> imDiff::ap_const_lv9_0 = "000000000";

imDiff::imDiff(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_SAD_fu_465_p2);
    sensitive << ( SAD_1_reg_189 );
    sensitive << ( abs_cast_fu_461_p1 );

    SC_METHOD(thread_abs_cast_fu_461_p1);
    sensitive << ( abs_fu_454_p3 );

    SC_METHOD(thread_abs_fu_454_p3);
    sensitive << ( tmp_43_reg_577 );
    sensitive << ( abscond_fu_449_p2 );
    sensitive << ( neg_fu_444_p2 );

    SC_METHOD(thread_abscond_fu_449_p2);
    sensitive << ( tmp_43_reg_577 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_30_fu_228_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_30_fu_228_p2 );

    SC_METHOD(thread_ap_return_0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_30_fu_228_p2 );
    sensitive << ( output_struct_x_writ_fu_68 );

    SC_METHOD(thread_ap_return_1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_30_fu_228_p2 );
    sensitive << ( output_struct_y_writ_fu_64 );

    SC_METHOD(thread_col_img_fu_260_p2);
    sensitive << ( output_struct_x_reg_132 );

    SC_METHOD(thread_col_tpl_1_fu_378_p2);
    sensitive << ( col_tpl_reg_178 );

    SC_METHOD(thread_col_tpl_cast_fu_369_p1);
    sensitive << ( col_tpl_reg_178 );

    SC_METHOD(thread_imINPUT_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_47_cast_fu_403_p1 );

    SC_METHOD(thread_imINPUT_ce0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_neg_fu_444_p2);
    sensitive << ( tmp_43_reg_577 );

    SC_METHOD(thread_next_mul_fu_270_p2);
    sensitive << ( phi_mul_reg_167 );

    SC_METHOD(thread_or_cond_fu_326_p2);
    sensitive << ( tmp_37_fu_314_p2 );
    sensitive << ( tmp_39_fu_320_p2 );

    SC_METHOD(thread_output_struct_SAD_0_s_fu_346_p3);
    sensitive << ( minSAD_1_reg_155 );
    sensitive << ( minSAD_fu_60 );
    sensitive << ( or_cond_fu_326_p2 );

    SC_METHOD(thread_output_struct_x_0_ou_fu_332_p3);
    sensitive << ( output_struct_x_cast_reg_523 );
    sensitive << ( output_struct_x_writ_fu_68 );
    sensitive << ( or_cond_fu_326_p2 );

    SC_METHOD(thread_output_struct_x_cast_fu_251_p1);
    sensitive << ( output_struct_x_reg_132 );

    SC_METHOD(thread_output_struct_y_0_ou_fu_339_p3);
    sensitive << ( output_struct_y_cast_reg_510 );
    sensitive << ( output_struct_y_writ_fu_64 );
    sensitive << ( or_cond_fu_326_p2 );

    SC_METHOD(thread_output_struct_y_cast_fu_224_p1);
    sensitive << ( output_struct_y_reg_120 );

    SC_METHOD(thread_row_img_fu_233_p2);
    sensitive << ( output_struct_y_reg_120 );

    SC_METHOD(thread_row_tpl_1_fu_285_p2);
    sensitive << ( row_tpl_reg_144 );

    SC_METHOD(thread_row_tpl_cast_fu_276_p1);
    sensitive << ( row_tpl_reg_144 );

    SC_METHOD(thread_search_img_cast_fu_426_p1);
    sensitive << ( search_img_fu_422_p1 );

    SC_METHOD(thread_search_img_fu_422_p1);
    sensitive << ( imINPUT_q0 );

    SC_METHOD(thread_template_img_cast_fu_434_p1);
    sensitive << ( template_img_fu_430_p1 );

    SC_METHOD(thread_template_img_fu_430_p1);
    sensitive << ( tplINPUT_q0 );

    SC_METHOD(thread_tmp_30_fu_228_p2);
    sensitive << ( tmp_reg_500 );
    sensitive << ( output_struct_y_cast_fu_224_p1 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_tmp_32_fu_255_p2);
    sensitive << ( tmp_s_reg_505 );
    sensitive << ( output_struct_x_cast_fu_251_p1 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_tmp_34_fu_280_p2);
    sensitive << ( tplHeight );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( row_tpl_cast_fu_276_p1 );

    SC_METHOD(thread_tmp_36_fu_305_p2);
    sensitive << ( tmp_51_fu_299_p2 );

    SC_METHOD(thread_tmp_37_fu_314_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_34_fu_280_p2 );
    sensitive << ( minSAD_1_reg_155 );
    sensitive << ( minSAD_fu_60 );

    SC_METHOD(thread_tmp_39_fu_320_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_34_fu_280_p2 );
    sensitive << ( minSAD_fu_60 );

    SC_METHOD(thread_tmp_40_fu_373_p2);
    sensitive << ( tplWidth );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( col_tpl_cast_fu_369_p1 );

    SC_METHOD(thread_tmp_41_fu_398_p2);
    sensitive << ( tmp_36_reg_554 );
    sensitive << ( tmp_54_fu_392_p2 );

    SC_METHOD(thread_tmp_42_fu_412_p2);
    sensitive << ( tmp_45_reg_536 );
    sensitive << ( tmp_56_fu_408_p1 );

    SC_METHOD(thread_tmp_43_fu_438_p2);
    sensitive << ( search_img_cast_fu_426_p1 );
    sensitive << ( template_img_cast_fu_434_p1 );

    SC_METHOD(thread_tmp_45_fu_266_p1);
    sensitive << ( phi_mul_reg_167 );

    SC_METHOD(thread_tmp_46_fu_291_p1);
    sensitive << ( output_struct_y_reg_120 );

    SC_METHOD(thread_tmp_47_cast_fu_403_p1);
    sensitive << ( tmp_41_fu_398_p2 );

    SC_METHOD(thread_tmp_48_fu_295_p1);
    sensitive << ( row_tpl_reg_144 );

    SC_METHOD(thread_tmp_50_cast_fu_417_p1);
    sensitive << ( tmp_42_fu_412_p2 );

    SC_METHOD(thread_tmp_51_fu_299_p2);
    sensitive << ( tmp_48_fu_295_p1 );
    sensitive << ( tmp_46_fu_291_p1 );

    SC_METHOD(thread_tmp_52_fu_384_p1);
    sensitive << ( col_tpl_reg_178 );

    SC_METHOD(thread_tmp_53_fu_388_p1);
    sensitive << ( output_struct_x_reg_132 );

    SC_METHOD(thread_tmp_54_fu_392_p2);
    sensitive << ( tmp_53_fu_388_p1 );
    sensitive << ( tmp_52_fu_384_p1 );

    SC_METHOD(thread_tmp_56_fu_408_p1);
    sensitive << ( col_tpl_reg_178 );

    SC_METHOD(thread_tmp_fu_207_p2);
    sensitive << ( imHeight );
    sensitive << ( tplHeight );

    SC_METHOD(thread_tmp_s_fu_213_p2);
    sensitive << ( imWidth );
    sensitive << ( tplWidth );

    SC_METHOD(thread_tplINPUT_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_50_cast_fu_417_p1 );

    SC_METHOD(thread_tplINPUT_ce0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_34_fu_280_p2 );
    sensitive << ( tmp_40_fu_373_p2 );
    sensitive << ( tmp_32_fu_255_p2 );
    sensitive << ( tmp_30_fu_228_p2 );

    ap_CS_fsm = "000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "imDiff_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, imINPUT_address0, "(port)imINPUT_address0");
    sc_trace(mVcdFile, imINPUT_ce0, "(port)imINPUT_ce0");
    sc_trace(mVcdFile, imINPUT_q0, "(port)imINPUT_q0");
    sc_trace(mVcdFile, imHeight, "(port)imHeight");
    sc_trace(mVcdFile, imWidth, "(port)imWidth");
    sc_trace(mVcdFile, tplINPUT_address0, "(port)tplINPUT_address0");
    sc_trace(mVcdFile, tplINPUT_ce0, "(port)tplINPUT_ce0");
    sc_trace(mVcdFile, tplINPUT_q0, "(port)tplINPUT_q0");
    sc_trace(mVcdFile, tplHeight, "(port)tplHeight");
    sc_trace(mVcdFile, tplWidth, "(port)tplWidth");
    sc_trace(mVcdFile, ap_return_0, "(port)ap_return_0");
    sc_trace(mVcdFile, ap_return_1, "(port)ap_return_1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, tmp_fu_207_p2, "tmp_fu_207_p2");
    sc_trace(mVcdFile, tmp_reg_500, "tmp_reg_500");
    sc_trace(mVcdFile, tmp_s_fu_213_p2, "tmp_s_fu_213_p2");
    sc_trace(mVcdFile, tmp_s_reg_505, "tmp_s_reg_505");
    sc_trace(mVcdFile, output_struct_y_cast_fu_224_p1, "output_struct_y_cast_fu_224_p1");
    sc_trace(mVcdFile, output_struct_y_cast_reg_510, "output_struct_y_cast_reg_510");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, row_img_fu_233_p2, "row_img_fu_233_p2");
    sc_trace(mVcdFile, row_img_reg_518, "row_img_reg_518");
    sc_trace(mVcdFile, output_struct_x_cast_fu_251_p1, "output_struct_x_cast_fu_251_p1");
    sc_trace(mVcdFile, output_struct_x_cast_reg_523, "output_struct_x_cast_reg_523");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, col_img_fu_260_p2, "col_img_fu_260_p2");
    sc_trace(mVcdFile, col_img_reg_531, "col_img_reg_531");
    sc_trace(mVcdFile, tmp_45_fu_266_p1, "tmp_45_fu_266_p1");
    sc_trace(mVcdFile, tmp_45_reg_536, "tmp_45_reg_536");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, next_mul_fu_270_p2, "next_mul_fu_270_p2");
    sc_trace(mVcdFile, next_mul_reg_541, "next_mul_reg_541");
    sc_trace(mVcdFile, row_tpl_1_fu_285_p2, "row_tpl_1_fu_285_p2");
    sc_trace(mVcdFile, row_tpl_1_reg_549, "row_tpl_1_reg_549");
    sc_trace(mVcdFile, tmp_36_fu_305_p2, "tmp_36_fu_305_p2");
    sc_trace(mVcdFile, tmp_36_reg_554, "tmp_36_reg_554");
    sc_trace(mVcdFile, tmp_34_fu_280_p2, "tmp_34_fu_280_p2");
    sc_trace(mVcdFile, col_tpl_1_fu_378_p2, "col_tpl_1_fu_378_p2");
    sc_trace(mVcdFile, col_tpl_1_reg_562, "col_tpl_1_reg_562");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_40_fu_373_p2, "tmp_40_fu_373_p2");
    sc_trace(mVcdFile, tmp_43_fu_438_p2, "tmp_43_fu_438_p2");
    sc_trace(mVcdFile, tmp_43_reg_577, "tmp_43_reg_577");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, SAD_fu_465_p2, "SAD_fu_465_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, output_struct_y_reg_120, "output_struct_y_reg_120");
    sc_trace(mVcdFile, tmp_32_fu_255_p2, "tmp_32_fu_255_p2");
    sc_trace(mVcdFile, output_struct_x_reg_132, "output_struct_x_reg_132");
    sc_trace(mVcdFile, tmp_30_fu_228_p2, "tmp_30_fu_228_p2");
    sc_trace(mVcdFile, row_tpl_reg_144, "row_tpl_reg_144");
    sc_trace(mVcdFile, minSAD_1_reg_155, "minSAD_1_reg_155");
    sc_trace(mVcdFile, phi_mul_reg_167, "phi_mul_reg_167");
    sc_trace(mVcdFile, col_tpl_reg_178, "col_tpl_reg_178");
    sc_trace(mVcdFile, SAD_1_reg_189, "SAD_1_reg_189");
    sc_trace(mVcdFile, tmp_47_cast_fu_403_p1, "tmp_47_cast_fu_403_p1");
    sc_trace(mVcdFile, tmp_50_cast_fu_417_p1, "tmp_50_cast_fu_417_p1");
    sc_trace(mVcdFile, minSAD_fu_60, "minSAD_fu_60");
    sc_trace(mVcdFile, output_struct_SAD_0_s_fu_346_p3, "output_struct_SAD_0_s_fu_346_p3");
    sc_trace(mVcdFile, output_struct_y_writ_fu_64, "output_struct_y_writ_fu_64");
    sc_trace(mVcdFile, output_struct_y_0_ou_fu_339_p3, "output_struct_y_0_ou_fu_339_p3");
    sc_trace(mVcdFile, output_struct_x_writ_fu_68, "output_struct_x_writ_fu_68");
    sc_trace(mVcdFile, output_struct_x_0_ou_fu_332_p3, "output_struct_x_0_ou_fu_332_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, row_tpl_cast_fu_276_p1, "row_tpl_cast_fu_276_p1");
    sc_trace(mVcdFile, tmp_48_fu_295_p1, "tmp_48_fu_295_p1");
    sc_trace(mVcdFile, tmp_46_fu_291_p1, "tmp_46_fu_291_p1");
    sc_trace(mVcdFile, tmp_51_fu_299_p2, "tmp_51_fu_299_p2");
    sc_trace(mVcdFile, tmp_37_fu_314_p2, "tmp_37_fu_314_p2");
    sc_trace(mVcdFile, tmp_39_fu_320_p2, "tmp_39_fu_320_p2");
    sc_trace(mVcdFile, or_cond_fu_326_p2, "or_cond_fu_326_p2");
    sc_trace(mVcdFile, col_tpl_cast_fu_369_p1, "col_tpl_cast_fu_369_p1");
    sc_trace(mVcdFile, tmp_53_fu_388_p1, "tmp_53_fu_388_p1");
    sc_trace(mVcdFile, tmp_52_fu_384_p1, "tmp_52_fu_384_p1");
    sc_trace(mVcdFile, tmp_54_fu_392_p2, "tmp_54_fu_392_p2");
    sc_trace(mVcdFile, tmp_41_fu_398_p2, "tmp_41_fu_398_p2");
    sc_trace(mVcdFile, tmp_56_fu_408_p1, "tmp_56_fu_408_p1");
    sc_trace(mVcdFile, tmp_42_fu_412_p2, "tmp_42_fu_412_p2");
    sc_trace(mVcdFile, search_img_fu_422_p1, "search_img_fu_422_p1");
    sc_trace(mVcdFile, template_img_fu_430_p1, "template_img_fu_430_p1");
    sc_trace(mVcdFile, search_img_cast_fu_426_p1, "search_img_cast_fu_426_p1");
    sc_trace(mVcdFile, template_img_cast_fu_434_p1, "template_img_cast_fu_434_p1");
    sc_trace(mVcdFile, abscond_fu_449_p2, "abscond_fu_449_p2");
    sc_trace(mVcdFile, neg_fu_444_p2, "neg_fu_444_p2");
    sc_trace(mVcdFile, abs_fu_454_p3, "abs_fu_454_p3");
    sc_trace(mVcdFile, abs_cast_fu_461_p1, "abs_cast_fu_461_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

imDiff::~imDiff() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void imDiff::thread_ap_clk_no_reset_() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read()))) {
        SAD_1_reg_189 = SAD_fu_465_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()) && 
                !esl_seteq<1,1,1>(tmp_34_fu_280_p2.read(), ap_const_lv1_0))) {
        SAD_1_reg_189 = minSAD_1_reg_155.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state9.read()))) {
        col_tpl_reg_178 = col_tpl_1_reg_562.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()) && 
                !esl_seteq<1,1,1>(tmp_34_fu_280_p2.read(), ap_const_lv1_0))) {
        col_tpl_reg_178 = ap_const_lv31_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_40_fu_373_p2.read()))) {
        minSAD_1_reg_155 = SAD_1_reg_189.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_32_fu_255_p2.read()))) {
        minSAD_1_reg_155 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(tmp_34_fu_280_p2.read(), ap_const_lv1_0))) {
        minSAD_fu_60 = output_struct_SAD_0_s_fu_346_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        minSAD_fu_60 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(tmp_34_fu_280_p2.read(), ap_const_lv1_0))) {
        output_struct_x_reg_132 = col_img_reg_531.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_30_fu_228_p2.read()))) {
        output_struct_x_reg_132 = ap_const_lv31_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_32_fu_255_p2.read()))) {
        output_struct_y_reg_120 = row_img_reg_518.read();
    } else if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        output_struct_y_reg_120 = ap_const_lv31_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_40_fu_373_p2.read()))) {
        phi_mul_reg_167 = next_mul_reg_541.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_32_fu_255_p2.read()))) {
        phi_mul_reg_167 = ap_const_lv42_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_40_fu_373_p2.read()))) {
        row_tpl_reg_144 = row_tpl_1_reg_549.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_32_fu_255_p2.read()))) {
        row_tpl_reg_144 = ap_const_lv31_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read()))) {
        col_img_reg_531 = col_img_fu_260_p2.read();
        output_struct_x_cast_reg_523 = output_struct_x_cast_fu_251_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state5.read()))) {
        col_tpl_1_reg_562 = col_tpl_1_fu_378_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()))) {
        next_mul_reg_541 = next_mul_fu_270_p2.read();
        row_tpl_1_reg_549 = row_tpl_1_fu_285_p2.read();
        tmp_45_reg_536 = tmp_45_fu_266_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(tmp_34_fu_280_p2.read(), ap_const_lv1_0))) {
        output_struct_x_writ_fu_68 = output_struct_x_0_ou_fu_332_p3.read();
        output_struct_y_writ_fu_64 = output_struct_y_0_ou_fu_339_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()))) {
        output_struct_y_cast_reg_510 = output_struct_y_cast_fu_224_p1.read();
        row_img_reg_518 = row_img_fu_233_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()) && !esl_seteq<1,1,1>(tmp_34_fu_280_p2.read(), ap_const_lv1_0))) {
        tmp_36_reg_554 = tmp_36_fu_305_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state8.read()))) {
        tmp_43_reg_577 = tmp_43_fu_438_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        tmp_reg_500 = tmp_fu_207_p2.read();
        tmp_s_reg_505 = tmp_s_fu_213_p2.read();
    }
}

void imDiff::thread_SAD_fu_465_p2() {
    SAD_fu_465_p2 = (!abs_cast_fu_461_p1.read().is_01() || !SAD_1_reg_189.read().is_01())? sc_lv<32>(): (sc_bigint<32>(abs_cast_fu_461_p1.read()) + sc_biguint<32>(SAD_1_reg_189.read()));
}

void imDiff::thread_abs_cast_fu_461_p1() {
    abs_cast_fu_461_p1 = esl_sext<32,9>(abs_fu_454_p3.read());
}

void imDiff::thread_abs_fu_454_p3() {
    abs_fu_454_p3 = (!abscond_fu_449_p2.read()[0].is_01())? sc_lv<9>(): ((abscond_fu_449_p2.read()[0].to_bool())? tmp_43_reg_577.read(): neg_fu_444_p2.read());
}

void imDiff::thread_abscond_fu_449_p2() {
    abscond_fu_449_p2 = (!tmp_43_reg_577.read().is_01() || !ap_const_lv9_0.is_01())? sc_lv<1>(): (sc_bigint<9>(tmp_43_reg_577.read()) > sc_bigint<9>(ap_const_lv9_0));
}

void imDiff::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read().range(0, 0);
}

void imDiff::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read().range(1, 1);
}

void imDiff::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read().range(2, 2);
}

void imDiff::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read().range(3, 3);
}

void imDiff::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read().range(4, 4);
}

void imDiff::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read().range(5, 5);
}

void imDiff::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read().range(6, 6);
}

void imDiff::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read().range(7, 7);
}

void imDiff::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read().range(8, 8);
}

void imDiff::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_30_fu_228_p2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void imDiff::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void imDiff::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_30_fu_228_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void imDiff::thread_ap_return_0() {
    ap_return_0 = output_struct_x_writ_fu_68.read();
}

void imDiff::thread_ap_return_1() {
    ap_return_1 = output_struct_y_writ_fu_64.read();
}

void imDiff::thread_col_img_fu_260_p2() {
    col_img_fu_260_p2 = (!output_struct_x_reg_132.read().is_01() || !ap_const_lv31_1.is_01())? sc_lv<31>(): (sc_biguint<31>(output_struct_x_reg_132.read()) + sc_biguint<31>(ap_const_lv31_1));
}

void imDiff::thread_col_tpl_1_fu_378_p2() {
    col_tpl_1_fu_378_p2 = (!col_tpl_reg_178.read().is_01() || !ap_const_lv31_1.is_01())? sc_lv<31>(): (sc_biguint<31>(col_tpl_reg_178.read()) + sc_biguint<31>(ap_const_lv31_1));
}

void imDiff::thread_col_tpl_cast_fu_369_p1() {
    col_tpl_cast_fu_369_p1 = esl_zext<32,31>(col_tpl_reg_178.read());
}

void imDiff::thread_imINPUT_address0() {
    imINPUT_address0 =  (sc_lv<21>) (tmp_47_cast_fu_403_p1.read());
}

void imDiff::thread_imINPUT_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state5.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state8.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state6.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read())))) {
        imINPUT_ce0 = ap_const_logic_1;
    } else {
        imINPUT_ce0 = ap_const_logic_0;
    }
}

void imDiff::thread_neg_fu_444_p2() {
    neg_fu_444_p2 = (!ap_const_lv9_0.is_01() || !tmp_43_reg_577.read().is_01())? sc_lv<9>(): (sc_biguint<9>(ap_const_lv9_0) - sc_biguint<9>(tmp_43_reg_577.read()));
}

void imDiff::thread_next_mul_fu_270_p2() {
    next_mul_fu_270_p2 = (!ap_const_lv42_4B0.is_01() || !phi_mul_reg_167.read().is_01())? sc_lv<42>(): (sc_biguint<42>(ap_const_lv42_4B0) + sc_biguint<42>(phi_mul_reg_167.read()));
}

void imDiff::thread_or_cond_fu_326_p2() {
    or_cond_fu_326_p2 = (tmp_37_fu_314_p2.read() | tmp_39_fu_320_p2.read());
}

void imDiff::thread_output_struct_SAD_0_s_fu_346_p3() {
    output_struct_SAD_0_s_fu_346_p3 = (!or_cond_fu_326_p2.read()[0].is_01())? sc_lv<32>(): ((or_cond_fu_326_p2.read()[0].to_bool())? minSAD_1_reg_155.read(): minSAD_fu_60.read());
}

void imDiff::thread_output_struct_x_0_ou_fu_332_p3() {
    output_struct_x_0_ou_fu_332_p3 = (!or_cond_fu_326_p2.read()[0].is_01())? sc_lv<32>(): ((or_cond_fu_326_p2.read()[0].to_bool())? output_struct_x_cast_reg_523.read(): output_struct_x_writ_fu_68.read());
}

void imDiff::thread_output_struct_x_cast_fu_251_p1() {
    output_struct_x_cast_fu_251_p1 = esl_zext<32,31>(output_struct_x_reg_132.read());
}

void imDiff::thread_output_struct_y_0_ou_fu_339_p3() {
    output_struct_y_0_ou_fu_339_p3 = (!or_cond_fu_326_p2.read()[0].is_01())? sc_lv<32>(): ((or_cond_fu_326_p2.read()[0].to_bool())? output_struct_y_cast_reg_510.read(): output_struct_y_writ_fu_64.read());
}

void imDiff::thread_output_struct_y_cast_fu_224_p1() {
    output_struct_y_cast_fu_224_p1 = esl_zext<32,31>(output_struct_y_reg_120.read());
}

void imDiff::thread_row_img_fu_233_p2() {
    row_img_fu_233_p2 = (!output_struct_y_reg_120.read().is_01() || !ap_const_lv31_1.is_01())? sc_lv<31>(): (sc_biguint<31>(output_struct_y_reg_120.read()) + sc_biguint<31>(ap_const_lv31_1));
}

void imDiff::thread_row_tpl_1_fu_285_p2() {
    row_tpl_1_fu_285_p2 = (!ap_const_lv31_1.is_01() || !row_tpl_reg_144.read().is_01())? sc_lv<31>(): (sc_biguint<31>(ap_const_lv31_1) + sc_biguint<31>(row_tpl_reg_144.read()));
}

void imDiff::thread_row_tpl_cast_fu_276_p1() {
    row_tpl_cast_fu_276_p1 = esl_zext<32,31>(row_tpl_reg_144.read());
}

void imDiff::thread_search_img_cast_fu_426_p1() {
    search_img_cast_fu_426_p1 = esl_zext<9,8>(search_img_fu_422_p1.read());
}

void imDiff::thread_search_img_fu_422_p1() {
    search_img_fu_422_p1 = imINPUT_q0.read().range(8-1, 0);
}

void imDiff::thread_template_img_cast_fu_434_p1() {
    template_img_cast_fu_434_p1 = esl_zext<9,8>(template_img_fu_430_p1.read());
}

void imDiff::thread_template_img_fu_430_p1() {
    template_img_fu_430_p1 = tplINPUT_q0.read().range(8-1, 0);
}

void imDiff::thread_tmp_30_fu_228_p2() {
    tmp_30_fu_228_p2 = (!output_struct_y_cast_fu_224_p1.read().is_01() || !tmp_reg_500.read().is_01())? sc_lv<1>(): (sc_bigint<32>(output_struct_y_cast_fu_224_p1.read()) < sc_bigint<32>(tmp_reg_500.read()));
}

void imDiff::thread_tmp_32_fu_255_p2() {
    tmp_32_fu_255_p2 = (!output_struct_x_cast_fu_251_p1.read().is_01() || !tmp_s_reg_505.read().is_01())? sc_lv<1>(): (sc_bigint<32>(output_struct_x_cast_fu_251_p1.read()) < sc_bigint<32>(tmp_s_reg_505.read()));
}

void imDiff::thread_tmp_34_fu_280_p2() {
    tmp_34_fu_280_p2 = (!row_tpl_cast_fu_276_p1.read().is_01() || !tplHeight.read().is_01())? sc_lv<1>(): (sc_bigint<32>(row_tpl_cast_fu_276_p1.read()) < sc_bigint<32>(tplHeight.read()));
}

void imDiff::thread_tmp_36_fu_305_p2() {
    tmp_36_fu_305_p2 = (!ap_const_lv22_4B0.is_01() || !tmp_51_fu_299_p2.read().is_01())? sc_lv<22>(): sc_biguint<22>(ap_const_lv22_4B0) * sc_bigint<22>(tmp_51_fu_299_p2.read());
}

void imDiff::thread_tmp_37_fu_314_p2() {
    tmp_37_fu_314_p2 = (!minSAD_fu_60.read().is_01() || !minSAD_1_reg_155.read().is_01())? sc_lv<1>(): (sc_bigint<32>(minSAD_fu_60.read()) > sc_bigint<32>(minSAD_1_reg_155.read()));
}

void imDiff::thread_tmp_39_fu_320_p2() {
    tmp_39_fu_320_p2 = (!minSAD_fu_60.read().is_01() || !ap_const_lv32_0.is_01())? sc_lv<1>(): sc_lv<1>(minSAD_fu_60.read() == ap_const_lv32_0);
}

void imDiff::thread_tmp_40_fu_373_p2() {
    tmp_40_fu_373_p2 = (!col_tpl_cast_fu_369_p1.read().is_01() || !tplWidth.read().is_01())? sc_lv<1>(): (sc_bigint<32>(col_tpl_cast_fu_369_p1.read()) < sc_bigint<32>(tplWidth.read()));
}

void imDiff::thread_tmp_41_fu_398_p2() {
    tmp_41_fu_398_p2 = (!tmp_54_fu_392_p2.read().is_01() || !tmp_36_reg_554.read().is_01())? sc_lv<22>(): (sc_biguint<22>(tmp_54_fu_392_p2.read()) + sc_biguint<22>(tmp_36_reg_554.read()));
}

void imDiff::thread_tmp_42_fu_412_p2() {
    tmp_42_fu_412_p2 = (!tmp_56_fu_408_p1.read().is_01() || !tmp_45_reg_536.read().is_01())? sc_lv<22>(): (sc_biguint<22>(tmp_56_fu_408_p1.read()) + sc_biguint<22>(tmp_45_reg_536.read()));
}

void imDiff::thread_tmp_43_fu_438_p2() {
    tmp_43_fu_438_p2 = (!search_img_cast_fu_426_p1.read().is_01() || !template_img_cast_fu_434_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(search_img_cast_fu_426_p1.read()) - sc_biguint<9>(template_img_cast_fu_434_p1.read()));
}

void imDiff::thread_tmp_45_fu_266_p1() {
    tmp_45_fu_266_p1 = phi_mul_reg_167.read().range(22-1, 0);
}

void imDiff::thread_tmp_46_fu_291_p1() {
    tmp_46_fu_291_p1 = output_struct_y_reg_120.read().range(22-1, 0);
}

void imDiff::thread_tmp_47_cast_fu_403_p1() {
    tmp_47_cast_fu_403_p1 = esl_sext<64,22>(tmp_41_fu_398_p2.read());
}

void imDiff::thread_tmp_48_fu_295_p1() {
    tmp_48_fu_295_p1 = row_tpl_reg_144.read().range(22-1, 0);
}

void imDiff::thread_tmp_50_cast_fu_417_p1() {
    tmp_50_cast_fu_417_p1 = esl_zext<64,22>(tmp_42_fu_412_p2.read());
}

void imDiff::thread_tmp_51_fu_299_p2() {
    tmp_51_fu_299_p2 = (!tmp_48_fu_295_p1.read().is_01() || !tmp_46_fu_291_p1.read().is_01())? sc_lv<22>(): (sc_biguint<22>(tmp_48_fu_295_p1.read()) + sc_biguint<22>(tmp_46_fu_291_p1.read()));
}

void imDiff::thread_tmp_52_fu_384_p1() {
    tmp_52_fu_384_p1 = col_tpl_reg_178.read().range(22-1, 0);
}

void imDiff::thread_tmp_53_fu_388_p1() {
    tmp_53_fu_388_p1 = output_struct_x_reg_132.read().range(22-1, 0);
}

void imDiff::thread_tmp_54_fu_392_p2() {
    tmp_54_fu_392_p2 = (!tmp_53_fu_388_p1.read().is_01() || !tmp_52_fu_384_p1.read().is_01())? sc_lv<22>(): (sc_biguint<22>(tmp_53_fu_388_p1.read()) + sc_biguint<22>(tmp_52_fu_384_p1.read()));
}

void imDiff::thread_tmp_56_fu_408_p1() {
    tmp_56_fu_408_p1 = col_tpl_reg_178.read().range(22-1, 0);
}

void imDiff::thread_tmp_fu_207_p2() {
    tmp_fu_207_p2 = (!imHeight.read().is_01() || !tplHeight.read().is_01())? sc_lv<32>(): (sc_biguint<32>(imHeight.read()) - sc_biguint<32>(tplHeight.read()));
}

void imDiff::thread_tmp_s_fu_213_p2() {
    tmp_s_fu_213_p2 = (!imWidth.read().is_01() || !tplWidth.read().is_01())? sc_lv<32>(): (sc_biguint<32>(imWidth.read()) - sc_biguint<32>(tplWidth.read()));
}

void imDiff::thread_tplINPUT_address0() {
    tplINPUT_address0 =  (sc_lv<21>) (tmp_50_cast_fu_417_p1.read());
}

void imDiff::thread_tplINPUT_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state5.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state8.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state6.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read())))) {
        tplINPUT_ce0 = ap_const_logic_1;
    } else {
        tplINPUT_ce0 = ap_const_logic_0;
    }
}

void imDiff::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_30_fu_228_p2.read())) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_32_fu_255_p2.read())) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if (esl_seteq<1,1,1>(tmp_34_fu_280_p2.read(), ap_const_lv1_0)) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            if (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_40_fu_373_p2.read())) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        default : 
            ap_NS_fsm = "XXXXXXXXX";
            break;
    }
}

}

