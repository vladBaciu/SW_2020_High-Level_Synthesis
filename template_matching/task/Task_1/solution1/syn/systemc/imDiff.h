// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _imDiff_HH_
#define _imDiff_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct imDiff : public sc_module {
    // Port declarations 18
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<21> > imINPUT_address0;
    sc_out< sc_logic > imINPUT_ce0;
    sc_in< sc_lv<32> > imINPUT_q0;
    sc_in< sc_lv<32> > imHeight;
    sc_in< sc_lv<32> > imWidth;
    sc_out< sc_lv<21> > tplINPUT_address0;
    sc_out< sc_logic > tplINPUT_ce0;
    sc_in< sc_lv<32> > tplINPUT_q0;
    sc_in< sc_lv<32> > tplHeight;
    sc_in< sc_lv<32> > tplWidth;
    sc_out< sc_lv<32> > ap_return_0;
    sc_out< sc_lv<32> > ap_return_1;


    // Module declarations
    imDiff(sc_module_name name);
    SC_HAS_PROCESS(imDiff);

    ~imDiff();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<9> > ap_CS_fsm;
    sc_signal< sc_lv<1> > ap_CS_fsm_state1;
    sc_signal< sc_lv<32> > tmp_fu_207_p2;
    sc_signal< sc_lv<32> > tmp_reg_500;
    sc_signal< sc_lv<32> > tmp_s_fu_213_p2;
    sc_signal< sc_lv<32> > tmp_s_reg_505;
    sc_signal< sc_lv<32> > output_struct_y_cast_fu_224_p1;
    sc_signal< sc_lv<32> > output_struct_y_cast_reg_510;
    sc_signal< sc_lv<1> > ap_CS_fsm_state2;
    sc_signal< sc_lv<31> > row_img_fu_233_p2;
    sc_signal< sc_lv<31> > row_img_reg_518;
    sc_signal< sc_lv<32> > output_struct_x_cast_fu_251_p1;
    sc_signal< sc_lv<32> > output_struct_x_cast_reg_523;
    sc_signal< sc_lv<1> > ap_CS_fsm_state3;
    sc_signal< sc_lv<31> > col_img_fu_260_p2;
    sc_signal< sc_lv<31> > col_img_reg_531;
    sc_signal< sc_lv<22> > tmp_45_fu_266_p1;
    sc_signal< sc_lv<22> > tmp_45_reg_536;
    sc_signal< sc_lv<1> > ap_CS_fsm_state4;
    sc_signal< sc_lv<42> > next_mul_fu_270_p2;
    sc_signal< sc_lv<42> > next_mul_reg_541;
    sc_signal< sc_lv<31> > row_tpl_1_fu_285_p2;
    sc_signal< sc_lv<31> > row_tpl_1_reg_549;
    sc_signal< sc_lv<22> > tmp_36_fu_305_p2;
    sc_signal< sc_lv<22> > tmp_36_reg_554;
    sc_signal< sc_lv<1> > tmp_34_fu_280_p2;
    sc_signal< sc_lv<31> > col_tpl_1_fu_378_p2;
    sc_signal< sc_lv<31> > col_tpl_1_reg_562;
    sc_signal< sc_lv<1> > ap_CS_fsm_state5;
    sc_signal< sc_lv<1> > tmp_40_fu_373_p2;
    sc_signal< sc_lv<9> > tmp_43_fu_438_p2;
    sc_signal< sc_lv<9> > tmp_43_reg_577;
    sc_signal< sc_lv<1> > ap_CS_fsm_state8;
    sc_signal< sc_lv<32> > SAD_fu_465_p2;
    sc_signal< sc_lv<1> > ap_CS_fsm_state9;
    sc_signal< sc_lv<31> > output_struct_y_reg_120;
    sc_signal< sc_lv<1> > tmp_32_fu_255_p2;
    sc_signal< sc_lv<31> > output_struct_x_reg_132;
    sc_signal< sc_lv<1> > tmp_30_fu_228_p2;
    sc_signal< sc_lv<31> > row_tpl_reg_144;
    sc_signal< sc_lv<32> > minSAD_1_reg_155;
    sc_signal< sc_lv<42> > phi_mul_reg_167;
    sc_signal< sc_lv<31> > col_tpl_reg_178;
    sc_signal< sc_lv<32> > SAD_1_reg_189;
    sc_signal< sc_lv<64> > tmp_47_cast_fu_403_p1;
    sc_signal< sc_lv<64> > tmp_50_cast_fu_417_p1;
    sc_signal< sc_lv<32> > minSAD_fu_60;
    sc_signal< sc_lv<32> > output_struct_SAD_0_s_fu_346_p3;
    sc_signal< sc_lv<32> > output_struct_y_writ_fu_64;
    sc_signal< sc_lv<32> > output_struct_y_0_ou_fu_339_p3;
    sc_signal< sc_lv<32> > output_struct_x_writ_fu_68;
    sc_signal< sc_lv<32> > output_struct_x_0_ou_fu_332_p3;
    sc_signal< sc_lv<1> > ap_CS_fsm_state6;
    sc_signal< sc_lv<1> > ap_CS_fsm_state7;
    sc_signal< sc_lv<32> > row_tpl_cast_fu_276_p1;
    sc_signal< sc_lv<22> > tmp_48_fu_295_p1;
    sc_signal< sc_lv<22> > tmp_46_fu_291_p1;
    sc_signal< sc_lv<22> > tmp_51_fu_299_p2;
    sc_signal< sc_lv<1> > tmp_37_fu_314_p2;
    sc_signal< sc_lv<1> > tmp_39_fu_320_p2;
    sc_signal< sc_lv<1> > or_cond_fu_326_p2;
    sc_signal< sc_lv<32> > col_tpl_cast_fu_369_p1;
    sc_signal< sc_lv<22> > tmp_53_fu_388_p1;
    sc_signal< sc_lv<22> > tmp_52_fu_384_p1;
    sc_signal< sc_lv<22> > tmp_54_fu_392_p2;
    sc_signal< sc_lv<22> > tmp_41_fu_398_p2;
    sc_signal< sc_lv<22> > tmp_56_fu_408_p1;
    sc_signal< sc_lv<22> > tmp_42_fu_412_p2;
    sc_signal< sc_lv<8> > search_img_fu_422_p1;
    sc_signal< sc_lv<8> > template_img_fu_430_p1;
    sc_signal< sc_lv<9> > search_img_cast_fu_426_p1;
    sc_signal< sc_lv<9> > template_img_cast_fu_434_p1;
    sc_signal< sc_lv<1> > abscond_fu_449_p2;
    sc_signal< sc_lv<9> > neg_fu_444_p2;
    sc_signal< sc_lv<9> > abs_fu_454_p3;
    sc_signal< sc_lv<32> > abs_cast_fu_461_p1;
    sc_signal< sc_lv<9> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<9> ap_ST_fsm_state1;
    static const sc_lv<9> ap_ST_fsm_state2;
    static const sc_lv<9> ap_ST_fsm_state3;
    static const sc_lv<9> ap_ST_fsm_state4;
    static const sc_lv<9> ap_ST_fsm_state5;
    static const sc_lv<9> ap_ST_fsm_state6;
    static const sc_lv<9> ap_ST_fsm_state7;
    static const sc_lv<9> ap_ST_fsm_state8;
    static const sc_lv<9> ap_ST_fsm_state9;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<31> ap_const_lv31_0;
    static const sc_lv<42> ap_const_lv42_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<31> ap_const_lv31_1;
    static const sc_lv<42> ap_const_lv42_4B0;
    static const sc_lv<22> ap_const_lv22_4B0;
    static const sc_lv<9> ap_const_lv9_0;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_SAD_fu_465_p2();
    void thread_abs_cast_fu_461_p1();
    void thread_abs_fu_454_p3();
    void thread_abscond_fu_449_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return_0();
    void thread_ap_return_1();
    void thread_col_img_fu_260_p2();
    void thread_col_tpl_1_fu_378_p2();
    void thread_col_tpl_cast_fu_369_p1();
    void thread_imINPUT_address0();
    void thread_imINPUT_ce0();
    void thread_neg_fu_444_p2();
    void thread_next_mul_fu_270_p2();
    void thread_or_cond_fu_326_p2();
    void thread_output_struct_SAD_0_s_fu_346_p3();
    void thread_output_struct_x_0_ou_fu_332_p3();
    void thread_output_struct_x_cast_fu_251_p1();
    void thread_output_struct_y_0_ou_fu_339_p3();
    void thread_output_struct_y_cast_fu_224_p1();
    void thread_row_img_fu_233_p2();
    void thread_row_tpl_1_fu_285_p2();
    void thread_row_tpl_cast_fu_276_p1();
    void thread_search_img_cast_fu_426_p1();
    void thread_search_img_fu_422_p1();
    void thread_template_img_cast_fu_434_p1();
    void thread_template_img_fu_430_p1();
    void thread_tmp_30_fu_228_p2();
    void thread_tmp_32_fu_255_p2();
    void thread_tmp_34_fu_280_p2();
    void thread_tmp_36_fu_305_p2();
    void thread_tmp_37_fu_314_p2();
    void thread_tmp_39_fu_320_p2();
    void thread_tmp_40_fu_373_p2();
    void thread_tmp_41_fu_398_p2();
    void thread_tmp_42_fu_412_p2();
    void thread_tmp_43_fu_438_p2();
    void thread_tmp_45_fu_266_p1();
    void thread_tmp_46_fu_291_p1();
    void thread_tmp_47_cast_fu_403_p1();
    void thread_tmp_48_fu_295_p1();
    void thread_tmp_50_cast_fu_417_p1();
    void thread_tmp_51_fu_299_p2();
    void thread_tmp_52_fu_384_p1();
    void thread_tmp_53_fu_388_p1();
    void thread_tmp_54_fu_392_p2();
    void thread_tmp_56_fu_408_p1();
    void thread_tmp_fu_207_p2();
    void thread_tmp_s_fu_213_p2();
    void thread_tplINPUT_address0();
    void thread_tplINPUT_ce0();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
