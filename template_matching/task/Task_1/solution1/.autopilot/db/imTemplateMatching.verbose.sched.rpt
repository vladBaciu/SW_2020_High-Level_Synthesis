

================================================================
== Vivado HLS Report for 'imTemplateMatching'
================================================================
* Date:           Wed Dec 16 08:39:50 2020

* Version:        2016.4 (Build 1756540 on Mon Jan 23 19:31:01 MST 2017)
* Project:        Task_1
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      8.72|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+--------------+-----+--------------+---------+
    |       Latency      |      Interval      | Pipeline|
    | min |      max     | min |      max     |   Type  |
    +-----+--------------+-----+--------------+---------+
    |   30|  200613894430|   31|  200613894431|   none  |
    +-----+--------------+-----+--------------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----+--------+----------+-----------+-----------+---------+----------+
        |          |    Latency   | Iteration|  Initiation Interval  |   Trip  |          |
        | Loop Name| min |   max  |  Latency |  achieved |   target  |  Count  | Pipelined|
        +----------+-----+--------+----------+-----------+-----------+---------+----------+
        |- L110    |    0|  200400| 2 ~ 1002 |          -|          -| 0 ~ 200 |    no    |
        | + L111   |    0|    1000|         5|          -|          -| 0 ~ 200 |    no    |
        +----------+-----+--------+----------+-----------+-----------+---------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 14
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / (tmp_i)
10 --> 
	11  / (tmp_56_i)
	9  / (!tmp_56_i)
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	10  / true
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: imWidth_read (20)  [1/1] 0.00ns
:11  %imWidth_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %imWidth) nounwind

ST_1: imHeight_read (21)  [1/1] 0.00ns
:12  %imHeight_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %imHeight) nounwind

ST_1: StgValue_17 (23)  [2/2] 1.57ns  loc: imProcessing.cpp:165
:14  call fastcc void @imGrayScale([1440000 x i32]* %imINPUT, [1440000 x i32]* %imOUTPUT, i32 %imHeight_read, i32 %imWidth_read) nounwind


 <State 2>: 0.00ns
ST_2: StgValue_18 (23)  [1/2] 0.00ns  loc: imProcessing.cpp:165
:14  call fastcc void @imGrayScale([1440000 x i32]* %imINPUT, [1440000 x i32]* %imOUTPUT, i32 %imHeight_read, i32 %imWidth_read) nounwind


 <State 3>: 1.57ns
ST_3: tplWidth_read (18)  [1/1] 0.00ns
:9  %tplWidth_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %tplWidth) nounwind

ST_3: tplHeight_read (19)  [1/1] 0.00ns
:10  %tplHeight_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %tplHeight) nounwind

ST_3: StgValue_21 (22)  [2/2] 1.57ns  loc: imProcessing.cpp:164
:13  call fastcc void @imGrayScale([1440000 x i32]* %tplINPUT, [1440000 x i32]* %tplOUTPUT, i32 %tplHeight_read, i32 %tplWidth_read) nounwind

ST_3: StgValue_22 (24)  [2/2] 1.57ns
:15  call fastcc void @imGreyNormalization([1440000 x i32]* %imOUTPUT, i32 %imHeight_read, i32 %imWidth_read) nounwind


 <State 4>: 0.00ns
ST_4: StgValue_23 (22)  [1/2] 0.00ns  loc: imProcessing.cpp:164
:13  call fastcc void @imGrayScale([1440000 x i32]* %tplINPUT, [1440000 x i32]* %tplOUTPUT, i32 %tplHeight_read, i32 %tplWidth_read) nounwind

ST_4: StgValue_24 (24)  [1/2] 0.00ns
:15  call fastcc void @imGreyNormalization([1440000 x i32]* %imOUTPUT, i32 %imHeight_read, i32 %imWidth_read) nounwind


 <State 5>: 1.57ns
ST_5: StgValue_25 (25)  [2/2] 1.57ns
:16  call fastcc void @imGreyNormalization([1440000 x i32]* %tplOUTPUT, i32 %tplWidth_read, i32 %imWidth_read) nounwind


 <State 6>: 0.00ns
ST_6: StgValue_26 (25)  [1/2] 0.00ns
:16  call fastcc void @imGreyNormalization([1440000 x i32]* %tplOUTPUT, i32 %tplWidth_read, i32 %imWidth_read) nounwind


 <State 7>: 2.44ns
ST_7: imDiff_ret1 (26)  [2/2] 2.44ns  loc: imProcessing.cpp:169
:17  %imDiff_ret1 = call fastcc { i32, i32 } @imDiff([1440000 x i32]* %imOUTPUT, i32 %imHeight_read, i32 %imWidth_read, [1440000 x i32]* %tplOUTPUT, i32 %tplHeight_read, i32 %tplWidth_read) nounwind


 <State 8>: 1.57ns
ST_8: StgValue_28 (9)  [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecBitsMap([1440000 x i32]* %imINPUT) nounwind, !map !398

ST_8: StgValue_29 (10)  [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecBitsMap([1440000 x i32]* %imOUTPUT) nounwind, !map !404

ST_8: StgValue_30 (11)  [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecBitsMap(i32 %imHeight) nounwind, !map !408

ST_8: StgValue_31 (12)  [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecBitsMap(i32 %imWidth) nounwind, !map !414

ST_8: StgValue_32 (13)  [1/1] 0.00ns
:4  call void (...)* @_ssdm_op_SpecBitsMap([1440000 x i32]* %tplINPUT) nounwind, !map !418

ST_8: StgValue_33 (14)  [1/1] 0.00ns
:5  call void (...)* @_ssdm_op_SpecBitsMap([1440000 x i32]* %tplOUTPUT) nounwind, !map !422

ST_8: StgValue_34 (15)  [1/1] 0.00ns
:6  call void (...)* @_ssdm_op_SpecBitsMap(i32 %tplHeight) nounwind, !map !426

ST_8: StgValue_35 (16)  [1/1] 0.00ns
:7  call void (...)* @_ssdm_op_SpecBitsMap(i32 %tplWidth) nounwind, !map !430

ST_8: StgValue_36 (17)  [1/1] 0.00ns
:8  call void (...)* @_ssdm_op_SpecTopModule([19 x i8]* @imTemplateMatching_s) nounwind

ST_8: imDiff_ret1 (26)  [1/2] 0.00ns  loc: imProcessing.cpp:169
:17  %imDiff_ret1 = call fastcc { i32, i32 } @imDiff([1440000 x i32]* %imOUTPUT, i32 %imHeight_read, i32 %imWidth_read, [1440000 x i32]* %tplOUTPUT, i32 %tplHeight_read, i32 %tplWidth_read) nounwind

ST_8: template_match_posit (27)  [1/1] 0.00ns  loc: imProcessing.cpp:169
:18  %template_match_posit = extractvalue { i32, i32 } %imDiff_ret1, 0

ST_8: template_match_posit_1 (28)  [1/1] 0.00ns  loc: imProcessing.cpp:169
:19  %template_match_posit_1 = extractvalue { i32, i32 } %imDiff_ret1, 1

ST_8: StgValue_40 (29)  [1/1] 1.57ns  loc: imProcessing.cpp:142->imProcessing.cpp:171
:20  br label %1


 <State 9>: 8.58ns
ST_9: row_i (31)  [1/1] 0.00ns
:0  %row_i = phi i31 [ 0, %0 ], [ %row, %5 ]

ST_9: phi_mul (32)  [1/1] 0.00ns
:1  %phi_mul = phi i42 [ 0, %0 ], [ %next_mul, %5 ]

ST_9: tmp (33)  [1/1] 0.00ns
:2  %tmp = trunc i42 %phi_mul to i22

ST_9: next_mul (34)  [1/1] 2.80ns
:3  %next_mul = add i42 1200, %phi_mul

ST_9: row_i_cast (35)  [1/1] 0.00ns  loc: imProcessing.cpp:142->imProcessing.cpp:171
:4  %row_i_cast = zext i31 %row_i to i32

ST_9: tmp_i (36)  [1/1] 2.52ns  loc: imProcessing.cpp:142->imProcessing.cpp:171
:5  %tmp_i = icmp slt i32 %row_i_cast, %tplHeight_read

ST_9: row (37)  [1/1] 2.44ns  loc: imProcessing.cpp:142->imProcessing.cpp:171
:6  %row = add i31 1, %row_i

ST_9: StgValue_48 (38)  [1/1] 0.00ns  loc: imProcessing.cpp:142->imProcessing.cpp:171
:7  br i1 %tmp_i, label %2, label %imConstructOutputImage.exit

ST_9: StgValue_49 (40)  [1/1] 0.00ns  loc: imProcessing.cpp:142->imProcessing.cpp:171
:0  call void (...)* @_ssdm_op_SpecLoopName([5 x i8]* @p_str1132) nounwind

ST_9: tmp_39_i (41)  [1/1] 0.00ns  loc: imProcessing.cpp:142->imProcessing.cpp:171
:1  %tmp_39_i = call i32 (...)* @_ssdm_op_SpecRegionBegin([5 x i8]* @p_str1132) nounwind

ST_9: StgValue_51 (42)  [1/1] 0.00ns  loc: imProcessing.cpp:144->imProcessing.cpp:171
:2  call void (...)* @_ssdm_op_SpecLoopTripCount(i32 0, i32 200, i32 100, [1 x i8]* @p_str122) nounwind

ST_9: tmp_4 (43)  [1/1] 0.00ns  loc: imProcessing.cpp:148->imProcessing.cpp:171
:3  %tmp_4 = trunc i31 %row_i to i22

ST_9: tmp_5 (44)  [1/1] 0.00ns  loc: imProcessing.cpp:148->imProcessing.cpp:171
:4  %tmp_5 = trunc i32 %template_match_posit_1 to i22

ST_9: tmp_6 (45)  [1/1] 2.20ns  loc: imProcessing.cpp:148->imProcessing.cpp:171
:5  %tmp_6 = add i22 %tmp_5, %tmp_4

ST_9: tmp_1 (46)  [1/1] 6.38ns  loc: imProcessing.cpp:148->imProcessing.cpp:171
:6  %tmp_1 = mul i22 1200, %tmp_6

ST_9: StgValue_56 (47)  [1/1] 1.57ns  loc: imProcessing.cpp:145->imProcessing.cpp:171
:7  br label %3

ST_9: StgValue_57 (76)  [1/1] 0.00ns  loc: imProcessing.cpp:174
imConstructOutputImage.exit:0  ret void


 <State 10>: 4.81ns
ST_10: col_i (49)  [1/1] 0.00ns
:0  %col_i = phi i31 [ 0, %2 ], [ %col, %4 ]

ST_10: col_i_cast (50)  [1/1] 0.00ns  loc: imProcessing.cpp:145->imProcessing.cpp:171
:1  %col_i_cast = zext i31 %col_i to i32

ST_10: tmp_56_i (51)  [1/1] 2.52ns  loc: imProcessing.cpp:145->imProcessing.cpp:171
:2  %tmp_56_i = icmp slt i32 %col_i_cast, %tplWidth_read

ST_10: col (52)  [1/1] 2.44ns  loc: imProcessing.cpp:145->imProcessing.cpp:171
:3  %col = add i31 %col_i, 1

ST_10: StgValue_62 (53)  [1/1] 0.00ns  loc: imProcessing.cpp:145->imProcessing.cpp:171
:4  br i1 %tmp_56_i, label %4, label %5

ST_10: tmp_7 (58)  [1/1] 0.00ns  loc: imProcessing.cpp:148->imProcessing.cpp:171
:3  %tmp_7 = trunc i31 %col_i to i22

ST_10: tmp_2 (59)  [1/1] 2.20ns  loc: imProcessing.cpp:148->imProcessing.cpp:171
:4  %tmp_2 = add i22 %tmp, %tmp_7

ST_10: tmp_2_cast (60)  [1/1] 0.00ns  loc: imProcessing.cpp:148->imProcessing.cpp:171
:5  %tmp_2_cast = zext i22 %tmp_2 to i64

ST_10: tplINPUT_addr (61)  [1/1] 0.00ns  loc: imProcessing.cpp:148->imProcessing.cpp:171
:6  %tplINPUT_addr = getelementptr [1440000 x i32]* %tplINPUT, i64 0, i64 %tmp_2_cast

ST_10: tplINPUT_load (62)  [4/4] 2.61ns  loc: imProcessing.cpp:148->imProcessing.cpp:171
:7  %tplINPUT_load = load i32* %tplINPUT_addr, align 4

ST_10: tmp_8 (63)  [1/1] 0.00ns  loc: imProcessing.cpp:148->imProcessing.cpp:171
:8  %tmp_8 = trunc i31 %col_i to i22

ST_10: tmp_9 (64)  [1/1] 0.00ns  loc: imProcessing.cpp:148->imProcessing.cpp:171
:9  %tmp_9 = trunc i32 %template_match_posit to i22

ST_10: tmp_10 (65)  [1/1] 1.85ns  loc: imProcessing.cpp:148->imProcessing.cpp:171
:10  %tmp_10 = add i22 %tmp_9, %tmp_8

ST_10: tmp_3 (66)  [1/1] 1.85ns  loc: imProcessing.cpp:148->imProcessing.cpp:171
:11  %tmp_3 = add i22 %tmp_1, %tmp_10

ST_10: empty_11 (73)  [1/1] 0.00ns  loc: imProcessing.cpp:151->imProcessing.cpp:171
:0  %empty_11 = call i32 (...)* @_ssdm_op_SpecRegionEnd([5 x i8]* @p_str1132, i32 %tmp_39_i) nounwind

ST_10: StgValue_73 (74)  [1/1] 0.00ns  loc: imProcessing.cpp:142->imProcessing.cpp:171
:1  br label %1


 <State 11>: 2.61ns
ST_11: tplINPUT_load (62)  [3/4] 2.61ns  loc: imProcessing.cpp:148->imProcessing.cpp:171
:7  %tplINPUT_load = load i32* %tplINPUT_addr, align 4


 <State 12>: 2.61ns
ST_12: tplINPUT_load (62)  [2/4] 2.61ns  loc: imProcessing.cpp:148->imProcessing.cpp:171
:7  %tplINPUT_load = load i32* %tplINPUT_addr, align 4


 <State 13>: 5.22ns
ST_13: tplINPUT_load (62)  [1/4] 2.61ns  loc: imProcessing.cpp:148->imProcessing.cpp:171
:7  %tplINPUT_load = load i32* %tplINPUT_addr, align 4

ST_13: tmp_3_cast (67)  [1/1] 0.00ns  loc: imProcessing.cpp:148->imProcessing.cpp:171
:12  %tmp_3_cast = sext i22 %tmp_3 to i64

ST_13: imOUTPUT_addr (68)  [1/1] 0.00ns  loc: imProcessing.cpp:148->imProcessing.cpp:171
:13  %imOUTPUT_addr = getelementptr [1440000 x i32]* %imOUTPUT, i64 0, i64 %tmp_3_cast

ST_13: StgValue_79 (69)  [2/2] 2.61ns  loc: imProcessing.cpp:148->imProcessing.cpp:171
:14  store i32 %tplINPUT_load, i32* %imOUTPUT_addr, align 4


 <State 14>: 2.61ns
ST_14: StgValue_80 (55)  [1/1] 0.00ns  loc: imProcessing.cpp:145->imProcessing.cpp:171
:0  call void (...)* @_ssdm_op_SpecLoopName([5 x i8]* @p_str1233) nounwind

ST_14: tmp_40_i (56)  [1/1] 0.00ns  loc: imProcessing.cpp:145->imProcessing.cpp:171
:1  %tmp_40_i = call i32 (...)* @_ssdm_op_SpecRegionBegin([5 x i8]* @p_str1233) nounwind

ST_14: StgValue_82 (57)  [1/1] 0.00ns  loc: imProcessing.cpp:146->imProcessing.cpp:171
:2  call void (...)* @_ssdm_op_SpecLoopTripCount(i32 0, i32 200, i32 100, [1 x i8]* @p_str122) nounwind

ST_14: StgValue_83 (69)  [1/2] 2.61ns  loc: imProcessing.cpp:148->imProcessing.cpp:171
:14  store i32 %tplINPUT_load, i32* %imOUTPUT_addr, align 4

ST_14: empty (70)  [1/1] 0.00ns  loc: imProcessing.cpp:149->imProcessing.cpp:171
:15  %empty = call i32 (...)* @_ssdm_op_SpecRegionEnd([5 x i8]* @p_str1233, i32 %tmp_40_i) nounwind

ST_14: StgValue_85 (71)  [1/1] 0.00ns  loc: imProcessing.cpp:145->imProcessing.cpp:171
:16  br label %3



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.57ns
The critical path consists of the following:
	wire read on port 'imWidth' [20]  (0 ns)
	'call' operation (imProcessing.cpp:165) to 'imGrayScale' [23]  (1.57 ns)

 <State 2>: 0ns
The critical path consists of the following:

 <State 3>: 1.57ns
The critical path consists of the following:
	wire read on port 'tplWidth' [18]  (0 ns)
	'call' operation (imProcessing.cpp:164) to 'imGrayScale' [22]  (1.57 ns)

 <State 4>: 0ns
The critical path consists of the following:

 <State 5>: 1.57ns
The critical path consists of the following:
	'call' operation to 'imGreyNormalization' [25]  (1.57 ns)

 <State 6>: 0ns
The critical path consists of the following:

 <State 7>: 2.44ns
The critical path consists of the following:
	'call' operation ('imDiff_ret1', imProcessing.cpp:169) to 'imDiff' [26]  (2.44 ns)

 <State 8>: 1.57ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('row') with incoming values : ('row', imProcessing.cpp:142->imProcessing.cpp:171) [31]  (1.57 ns)

 <State 9>: 8.58ns
The critical path consists of the following:
	'phi' operation ('row') with incoming values : ('row', imProcessing.cpp:142->imProcessing.cpp:171) [31]  (0 ns)
	'add' operation ('tmp_6', imProcessing.cpp:148->imProcessing.cpp:171) [45]  (2.2 ns)
	'mul' operation ('tmp_1', imProcessing.cpp:148->imProcessing.cpp:171) [46]  (6.38 ns)

 <State 10>: 4.81ns
The critical path consists of the following:
	'phi' operation ('col') with incoming values : ('col', imProcessing.cpp:145->imProcessing.cpp:171) [49]  (0 ns)
	'add' operation ('tmp_2', imProcessing.cpp:148->imProcessing.cpp:171) [59]  (2.2 ns)
	'getelementptr' operation ('tplINPUT_addr', imProcessing.cpp:148->imProcessing.cpp:171) [61]  (0 ns)
	'load' operation ('tplINPUT_load', imProcessing.cpp:148->imProcessing.cpp:171) on array 'tplINPUT' [62]  (2.61 ns)

 <State 11>: 2.61ns
The critical path consists of the following:
	'load' operation ('tplINPUT_load', imProcessing.cpp:148->imProcessing.cpp:171) on array 'tplINPUT' [62]  (2.61 ns)

 <State 12>: 2.61ns
The critical path consists of the following:
	'load' operation ('tplINPUT_load', imProcessing.cpp:148->imProcessing.cpp:171) on array 'tplINPUT' [62]  (2.61 ns)

 <State 13>: 5.22ns
The critical path consists of the following:
	'load' operation ('tplINPUT_load', imProcessing.cpp:148->imProcessing.cpp:171) on array 'tplINPUT' [62]  (2.61 ns)
	'store' operation (imProcessing.cpp:148->imProcessing.cpp:171) of variable 'tplINPUT_load', imProcessing.cpp:148->imProcessing.cpp:171 on array 'imOUTPUT' [69]  (2.61 ns)

 <State 14>: 2.61ns
The critical path consists of the following:
	'store' operation (imProcessing.cpp:148->imProcessing.cpp:171) of variable 'tplINPUT_load', imProcessing.cpp:148->imProcessing.cpp:171 on array 'imOUTPUT' [69]  (2.61 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
