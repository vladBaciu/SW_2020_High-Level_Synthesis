// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "imGrayScale.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic imGrayScale::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic imGrayScale::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<31> imGrayScale::ap_ST_fsm_state1 = "1";
const sc_lv<31> imGrayScale::ap_ST_fsm_state2 = "10";
const sc_lv<31> imGrayScale::ap_ST_fsm_state3 = "100";
const sc_lv<31> imGrayScale::ap_ST_fsm_state4 = "1000";
const sc_lv<31> imGrayScale::ap_ST_fsm_state5 = "10000";
const sc_lv<31> imGrayScale::ap_ST_fsm_state6 = "100000";
const sc_lv<31> imGrayScale::ap_ST_fsm_state7 = "1000000";
const sc_lv<31> imGrayScale::ap_ST_fsm_state8 = "10000000";
const sc_lv<31> imGrayScale::ap_ST_fsm_state9 = "100000000";
const sc_lv<31> imGrayScale::ap_ST_fsm_state10 = "1000000000";
const sc_lv<31> imGrayScale::ap_ST_fsm_state11 = "10000000000";
const sc_lv<31> imGrayScale::ap_ST_fsm_state12 = "100000000000";
const sc_lv<31> imGrayScale::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<31> imGrayScale::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<31> imGrayScale::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<31> imGrayScale::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<31> imGrayScale::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<31> imGrayScale::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<31> imGrayScale::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<31> imGrayScale::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<31> imGrayScale::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<31> imGrayScale::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<31> imGrayScale::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<31> imGrayScale::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<31> imGrayScale::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<31> imGrayScale::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<31> imGrayScale::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<31> imGrayScale::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<31> imGrayScale::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<31> imGrayScale::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<31> imGrayScale::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<32> imGrayScale::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> imGrayScale::ap_const_lv1_1 = "1";
const sc_lv<32> imGrayScale::ap_const_lv32_11 = "10001";
const sc_lv<32> imGrayScale::ap_const_lv32_16 = "10110";
const sc_lv<32> imGrayScale::ap_const_lv32_1 = "1";
const sc_lv<32> imGrayScale::ap_const_lv32_2 = "10";
const sc_lv<1> imGrayScale::ap_const_lv1_0 = "0";
const sc_lv<32> imGrayScale::ap_const_lv32_5 = "101";
const sc_lv<32> imGrayScale::ap_const_lv32_6 = "110";
const sc_lv<32> imGrayScale::ap_const_lv32_B = "1011";
const sc_lv<32> imGrayScale::ap_const_lv32_10 = "10000";
const sc_lv<32> imGrayScale::ap_const_lv32_1B = "11011";
const sc_lv<32> imGrayScale::ap_const_lv32_1C = "11100";
const sc_lv<32> imGrayScale::ap_const_lv32_1D = "11101";
const sc_lv<31> imGrayScale::ap_const_lv31_0 = "0000000000000000000000000000000";
const sc_lv<42> imGrayScale::ap_const_lv42_0 = "000000000000000000000000000000000000000000";
const sc_lv<32> imGrayScale::ap_const_lv32_1E = "11110";
const sc_lv<32> imGrayScale::ap_const_lv32_3 = "11";
const sc_lv<32> imGrayScale::ap_const_lv32_4 = "100";
const sc_lv<32> imGrayScale::ap_const_lv32_12 = "10010";
const sc_lv<32> imGrayScale::ap_const_lv32_17 = "10111";
const sc_lv<64> imGrayScale::ap_const_lv64_3FBD2F1A9FBE76C9 = "11111110111101001011110001101010011111101111100111011011001001";
const sc_lv<64> imGrayScale::ap_const_lv64_3FE2C8B439581062 = "11111111100010110010001011010000111001010110000001000001100010";
const sc_lv<32> imGrayScale::ap_const_lv32_C = "1100";
const sc_lv<64> imGrayScale::ap_const_lv64_3FD322D0E5604189 = "11111111010011001000101101000011100101011000000100000110001001";
const sc_lv<42> imGrayScale::ap_const_lv42_4B0 = "10010110000";
const sc_lv<31> imGrayScale::ap_const_lv31_1 = "1";
const sc_lv<32> imGrayScale::ap_const_lv32_8 = "1000";
const sc_lv<32> imGrayScale::ap_const_lv32_F = "1111";
const sc_lv<32> imGrayScale::ap_const_lv32_34 = "110100";
const sc_lv<32> imGrayScale::ap_const_lv32_3E = "111110";
const sc_lv<12> imGrayScale::ap_const_lv12_C01 = "110000000001";
const sc_lv<11> imGrayScale::ap_const_lv11_3FF = "1111111111";
const sc_lv<32> imGrayScale::ap_const_lv32_3B = "111011";

imGrayScale::imGrayScale(sc_module_name name) : sc_module(name), mVcdFile(0) {
    imTemplateMatchinbkb_x_U10 = new imTemplateMatchinbkb<1,5,64,64,64>("imTemplateMatchinbkb_x_U10");
    imTemplateMatchinbkb_x_U10->clk(ap_clk);
    imTemplateMatchinbkb_x_U10->reset(ap_rst);
    imTemplateMatchinbkb_x_U10->din0(grp_fu_157_p0);
    imTemplateMatchinbkb_x_U10->din1(grp_fu_157_p1);
    imTemplateMatchinbkb_x_U10->ce(ap_var_for_const0);
    imTemplateMatchinbkb_x_U10->dout(grp_fu_157_p2);
    imTemplateMatchincud_x_U11 = new imTemplateMatchincud<1,6,64,64,64>("imTemplateMatchincud_x_U11");
    imTemplateMatchincud_x_U11->clk(ap_clk);
    imTemplateMatchincud_x_U11->reset(ap_rst);
    imTemplateMatchincud_x_U11->din0(grp_fu_161_p0);
    imTemplateMatchincud_x_U11->din1(grp_fu_161_p1);
    imTemplateMatchincud_x_U11->ce(ap_var_for_const0);
    imTemplateMatchincud_x_U11->dout(grp_fu_161_p2);
    imTemplateMatchincud_x_U12 = new imTemplateMatchincud<1,6,64,64,64>("imTemplateMatchincud_x_U12");
    imTemplateMatchincud_x_U12->clk(ap_clk);
    imTemplateMatchincud_x_U12->reset(ap_rst);
    imTemplateMatchincud_x_U12->din0(tmp_25_reg_476);
    imTemplateMatchincud_x_U12->din1(ap_var_for_const1);
    imTemplateMatchincud_x_U12->ce(ap_var_for_const0);
    imTemplateMatchincud_x_U12->dout(grp_fu_166_p2);
    imTemplateMatchindEe_x_U13 = new imTemplateMatchindEe<1,6,32,64>("imTemplateMatchindEe_x_U13");
    imTemplateMatchindEe_x_U13->clk(ap_clk);
    imTemplateMatchindEe_x_U13->reset(ap_rst);
    imTemplateMatchindEe_x_U13->din0(grp_fu_172_p0);
    imTemplateMatchindEe_x_U13->ce(ap_var_for_const0);
    imTemplateMatchindEe_x_U13->dout(grp_fu_172_p1);
    imTemplateMatchindEe_x_U14 = new imTemplateMatchindEe<1,6,32,64>("imTemplateMatchindEe_x_U14");
    imTemplateMatchindEe_x_U14->clk(ap_clk);
    imTemplateMatchindEe_x_U14->reset(ap_rst);
    imTemplateMatchindEe_x_U14->din0(grp_fu_175_p0);
    imTemplateMatchindEe_x_U14->ce(ap_var_for_const0);
    imTemplateMatchindEe_x_U14->dout(grp_fu_175_p1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state24);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state28);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state29);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state30);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state31);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_fu_198_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_fu_198_p2 );

    SC_METHOD(thread_col_4_fu_218_p2);
    sensitive << ( col_reg_146 );

    SC_METHOD(thread_col_cast_fu_209_p1);
    sensitive << ( col_reg_146 );

    SC_METHOD(thread_grp_fu_157_p0);
    sensitive << ( reg_178 );
    sensitive << ( tmp_27_reg_496 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state24 );

    SC_METHOD(thread_grp_fu_157_p1);
    sensitive << ( reg_178 );
    sensitive << ( tmp_26_reg_491 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state24 );

    SC_METHOD(thread_grp_fu_161_p0);
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( tmp_21_reg_471 );
    sensitive << ( tmp_30_reg_486 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_grp_fu_161_p1);
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_grp_fu_172_p0);
    sensitive << ( tmp_20_cast_fu_262_p1 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( tmp_29_cast_fu_270_p1 );

    SC_METHOD(thread_grp_fu_175_p0);
    sensitive << ( tmp_23_cast_reg_451 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_imINPUT_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_39_cast_fu_233_p1 );

    SC_METHOD(thread_imINPUT_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_imOUTPUT_address0);
    sensitive << ( tmp_39_cast_reg_436 );
    sensitive << ( ap_CS_fsm_state30 );

    SC_METHOD(thread_imOUTPUT_ce0);
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state31 );

    SC_METHOD(thread_imOUTPUT_d0);
    sensitive << ( result_V_reg_512 );
    sensitive << ( ap_CS_fsm_state30 );

    SC_METHOD(thread_imOUTPUT_we0);
    sensitive << ( ap_CS_fsm_state30 );

    SC_METHOD(thread_isNeg_fu_312_p3);
    sensitive << ( sh_assign_fu_306_p2 );

    SC_METHOD(thread_loc_V_3_fu_288_p1);
    sensitive << ( p_Val2_s_fu_274_p1 );

    SC_METHOD(thread_next_mul_fu_188_p2);
    sensitive << ( phi_mul_reg_135 );

    SC_METHOD(thread_p_Result_s_fu_292_p3);
    sensitive << ( loc_V_3_reg_507 );

    SC_METHOD(thread_p_Val2_s_fu_274_p1);
    sensitive << ( grp_fu_157_p2 );

    SC_METHOD(thread_result_V_fu_383_p3);
    sensitive << ( isNeg_fu_312_p3 );
    sensitive << ( tmp_35_fu_369_p1 );
    sensitive << ( tmp_36_fu_373_p4 );

    SC_METHOD(thread_row_4_fu_203_p2);
    sensitive << ( row_reg_124 );

    SC_METHOD(thread_row_cast_fu_194_p1);
    sensitive << ( row_reg_124 );

    SC_METHOD(thread_sh_assign_1_i_i_cast_fu_337_p1);
    sensitive << ( sh_assign_3_fu_329_p3 );

    SC_METHOD(thread_sh_assign_3_fu_329_p3);
    sensitive << ( sh_assign_fu_306_p2 );
    sensitive << ( isNeg_fu_312_p3 );
    sensitive << ( tmp_i_i_cast_fu_325_p1 );

    SC_METHOD(thread_sh_assign_fu_306_p2);
    sensitive << ( tmp_i_i_i_cast_fu_303_p1 );

    SC_METHOD(thread_tmp_18_fu_213_p2);
    sensitive << ( imWidth );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( col_cast_fu_209_p1 );

    SC_METHOD(thread_tmp_20_cast_fu_262_p1);
    sensitive << ( tmp_44_reg_446 );

    SC_METHOD(thread_tmp_29_cast_fu_270_p1);
    sensitive << ( tmp_28_cast_reg_456 );

    SC_METHOD(thread_tmp_33_fu_228_p2);
    sensitive << ( tmp_40_reg_410 );
    sensitive << ( tmp_43_fu_224_p1 );

    SC_METHOD(thread_tmp_35_fu_369_p1);
    sensitive << ( tmp_47_fu_361_p3 );

    SC_METHOD(thread_tmp_36_fu_373_p4);
    sensitive << ( tmp_57_i_i_fu_355_p2 );

    SC_METHOD(thread_tmp_39_cast_fu_233_p1);
    sensitive << ( tmp_33_fu_228_p2 );

    SC_METHOD(thread_tmp_40_fu_184_p1);
    sensitive << ( phi_mul_reg_135 );

    SC_METHOD(thread_tmp_43_fu_224_p1);
    sensitive << ( col_reg_146 );

    SC_METHOD(thread_tmp_44_fu_238_p1);
    sensitive << ( imINPUT_q0 );

    SC_METHOD(thread_tmp_47_fu_361_p3);
    sensitive << ( tmp_56_i_i_fu_349_p2 );

    SC_METHOD(thread_tmp_55_i_i_cast_fu_345_p1);
    sensitive << ( sh_assign_1_i_i_cast_fu_337_p1 );

    SC_METHOD(thread_tmp_55_i_i_fu_341_p1);
    sensitive << ( sh_assign_1_i_i_cast_fu_337_p1 );

    SC_METHOD(thread_tmp_56_i_i_fu_349_p2);
    sensitive << ( p_Result_s_fu_292_p3 );
    sensitive << ( tmp_55_i_i_cast_fu_345_p1 );

    SC_METHOD(thread_tmp_57_i_i_fu_355_p2);
    sensitive << ( tmp_i_i_fu_299_p1 );
    sensitive << ( tmp_55_i_i_fu_341_p1 );

    SC_METHOD(thread_tmp_fu_198_p2);
    sensitive << ( imHeight );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( row_cast_fu_194_p1 );

    SC_METHOD(thread_tmp_i_i_20_fu_320_p2);
    sensitive << ( loc_V_reg_501 );

    SC_METHOD(thread_tmp_i_i_cast_fu_325_p1);
    sensitive << ( tmp_i_i_20_fu_320_p2 );

    SC_METHOD(thread_tmp_i_i_fu_299_p1);
    sensitive << ( p_Result_s_fu_292_p3 );

    SC_METHOD(thread_tmp_i_i_i_cast_fu_303_p1);
    sensitive << ( loc_V_reg_501 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_18_fu_213_p2 );
    sensitive << ( tmp_fu_198_p2 );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    ap_CS_fsm = "0000000000000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "imGrayScale_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, imINPUT_address0, "(port)imINPUT_address0");
    sc_trace(mVcdFile, imINPUT_ce0, "(port)imINPUT_ce0");
    sc_trace(mVcdFile, imINPUT_q0, "(port)imINPUT_q0");
    sc_trace(mVcdFile, imOUTPUT_address0, "(port)imOUTPUT_address0");
    sc_trace(mVcdFile, imOUTPUT_ce0, "(port)imOUTPUT_ce0");
    sc_trace(mVcdFile, imOUTPUT_we0, "(port)imOUTPUT_we0");
    sc_trace(mVcdFile, imOUTPUT_d0, "(port)imOUTPUT_d0");
    sc_trace(mVcdFile, imHeight, "(port)imHeight");
    sc_trace(mVcdFile, imWidth, "(port)imWidth");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, grp_fu_161_p2, "grp_fu_161_p2");
    sc_trace(mVcdFile, reg_178, "reg_178");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, tmp_40_fu_184_p1, "tmp_40_fu_184_p1");
    sc_trace(mVcdFile, tmp_40_reg_410, "tmp_40_reg_410");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, next_mul_fu_188_p2, "next_mul_fu_188_p2");
    sc_trace(mVcdFile, next_mul_reg_415, "next_mul_reg_415");
    sc_trace(mVcdFile, row_4_fu_203_p2, "row_4_fu_203_p2");
    sc_trace(mVcdFile, row_4_reg_423, "row_4_reg_423");
    sc_trace(mVcdFile, col_4_fu_218_p2, "col_4_fu_218_p2");
    sc_trace(mVcdFile, col_4_reg_431, "col_4_reg_431");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_39_cast_fu_233_p1, "tmp_39_cast_fu_233_p1");
    sc_trace(mVcdFile, tmp_39_cast_reg_436, "tmp_39_cast_reg_436");
    sc_trace(mVcdFile, tmp_18_fu_213_p2, "tmp_18_fu_213_p2");
    sc_trace(mVcdFile, tmp_44_fu_238_p1, "tmp_44_fu_238_p1");
    sc_trace(mVcdFile, tmp_44_reg_446, "tmp_44_reg_446");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, tmp_23_cast_reg_451, "tmp_23_cast_reg_451");
    sc_trace(mVcdFile, tmp_28_cast_reg_456, "tmp_28_cast_reg_456");
    sc_trace(mVcdFile, tmp_20_cast_fu_262_p1, "tmp_20_cast_fu_262_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, grp_fu_172_p1, "grp_fu_172_p1");
    sc_trace(mVcdFile, tmp_21_reg_471, "tmp_21_reg_471");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, grp_fu_175_p1, "grp_fu_175_p1");
    sc_trace(mVcdFile, tmp_25_reg_476, "tmp_25_reg_476");
    sc_trace(mVcdFile, tmp_29_cast_fu_270_p1, "tmp_29_cast_fu_270_p1");
    sc_trace(mVcdFile, tmp_30_reg_486, "tmp_30_reg_486");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, grp_fu_166_p2, "grp_fu_166_p2");
    sc_trace(mVcdFile, tmp_26_reg_491, "tmp_26_reg_491");
    sc_trace(mVcdFile, grp_fu_157_p2, "grp_fu_157_p2");
    sc_trace(mVcdFile, tmp_27_reg_496, "tmp_27_reg_496");
    sc_trace(mVcdFile, loc_V_reg_501, "loc_V_reg_501");
    sc_trace(mVcdFile, ap_CS_fsm_state28, "ap_CS_fsm_state28");
    sc_trace(mVcdFile, loc_V_3_fu_288_p1, "loc_V_3_fu_288_p1");
    sc_trace(mVcdFile, loc_V_3_reg_507, "loc_V_3_reg_507");
    sc_trace(mVcdFile, result_V_fu_383_p3, "result_V_fu_383_p3");
    sc_trace(mVcdFile, result_V_reg_512, "result_V_reg_512");
    sc_trace(mVcdFile, ap_CS_fsm_state29, "ap_CS_fsm_state29");
    sc_trace(mVcdFile, ap_CS_fsm_state30, "ap_CS_fsm_state30");
    sc_trace(mVcdFile, row_reg_124, "row_reg_124");
    sc_trace(mVcdFile, phi_mul_reg_135, "phi_mul_reg_135");
    sc_trace(mVcdFile, col_reg_146, "col_reg_146");
    sc_trace(mVcdFile, tmp_fu_198_p2, "tmp_fu_198_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state31, "ap_CS_fsm_state31");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, grp_fu_157_p0, "grp_fu_157_p0");
    sc_trace(mVcdFile, grp_fu_157_p1, "grp_fu_157_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, ap_CS_fsm_state24, "ap_CS_fsm_state24");
    sc_trace(mVcdFile, grp_fu_161_p0, "grp_fu_161_p0");
    sc_trace(mVcdFile, grp_fu_161_p1, "grp_fu_161_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, grp_fu_172_p0, "grp_fu_172_p0");
    sc_trace(mVcdFile, grp_fu_175_p0, "grp_fu_175_p0");
    sc_trace(mVcdFile, row_cast_fu_194_p1, "row_cast_fu_194_p1");
    sc_trace(mVcdFile, col_cast_fu_209_p1, "col_cast_fu_209_p1");
    sc_trace(mVcdFile, tmp_43_fu_224_p1, "tmp_43_fu_224_p1");
    sc_trace(mVcdFile, tmp_33_fu_228_p2, "tmp_33_fu_228_p2");
    sc_trace(mVcdFile, p_Val2_s_fu_274_p1, "p_Val2_s_fu_274_p1");
    sc_trace(mVcdFile, p_Result_s_fu_292_p3, "p_Result_s_fu_292_p3");
    sc_trace(mVcdFile, tmp_i_i_i_cast_fu_303_p1, "tmp_i_i_i_cast_fu_303_p1");
    sc_trace(mVcdFile, sh_assign_fu_306_p2, "sh_assign_fu_306_p2");
    sc_trace(mVcdFile, tmp_i_i_20_fu_320_p2, "tmp_i_i_20_fu_320_p2");
    sc_trace(mVcdFile, isNeg_fu_312_p3, "isNeg_fu_312_p3");
    sc_trace(mVcdFile, tmp_i_i_cast_fu_325_p1, "tmp_i_i_cast_fu_325_p1");
    sc_trace(mVcdFile, sh_assign_3_fu_329_p3, "sh_assign_3_fu_329_p3");
    sc_trace(mVcdFile, sh_assign_1_i_i_cast_fu_337_p1, "sh_assign_1_i_i_cast_fu_337_p1");
    sc_trace(mVcdFile, tmp_55_i_i_cast_fu_345_p1, "tmp_55_i_i_cast_fu_345_p1");
    sc_trace(mVcdFile, tmp_i_i_fu_299_p1, "tmp_i_i_fu_299_p1");
    sc_trace(mVcdFile, tmp_55_i_i_fu_341_p1, "tmp_55_i_i_fu_341_p1");
    sc_trace(mVcdFile, tmp_56_i_i_fu_349_p2, "tmp_56_i_i_fu_349_p2");
    sc_trace(mVcdFile, tmp_47_fu_361_p3, "tmp_47_fu_361_p3");
    sc_trace(mVcdFile, tmp_57_i_i_fu_355_p2, "tmp_57_i_i_fu_355_p2");
    sc_trace(mVcdFile, tmp_35_fu_369_p1, "tmp_35_fu_369_p1");
    sc_trace(mVcdFile, tmp_36_fu_373_p4, "tmp_36_fu_373_p4");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

imGrayScale::~imGrayScale() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete imTemplateMatchinbkb_x_U10;
    delete imTemplateMatchincud_x_U11;
    delete imTemplateMatchincud_x_U12;
    delete imTemplateMatchindEe_x_U13;
    delete imTemplateMatchindEe_x_U14;
}

void imGrayScale::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void imGrayScale::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv64_3FD322D0E5604189;
}

void imGrayScale::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state31.read()))) {
        col_reg_146 = col_4_reg_431.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_198_p2.read()))) {
        col_reg_146 = ap_const_lv31_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(tmp_18_fu_213_p2.read(), ap_const_lv1_0))) {
        phi_mul_reg_135 = next_mul_reg_415.read();
    } else if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        phi_mul_reg_135 = ap_const_lv42_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(tmp_18_fu_213_p2.read(), ap_const_lv1_0))) {
        row_reg_124 = row_4_reg_423.read();
    } else if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        row_reg_124 = ap_const_lv31_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read()))) {
        col_4_reg_431 = col_4_fu_218_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state28.read()))) {
        loc_V_3_reg_507 = loc_V_3_fu_288_p1.read();
        loc_V_reg_501 = p_Val2_s_fu_274_p1.read().range(62, 52);
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()))) {
        next_mul_reg_415 = next_mul_fu_188_p2.read();
        row_4_reg_423 = row_4_fu_203_p2.read();
        tmp_40_reg_410 = tmp_40_fu_184_p1.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state18.read())) || (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state23.read())))) {
        reg_178 = grp_fu_161_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state29.read()))) {
        result_V_reg_512 = result_V_fu_383_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state12.read()))) {
        tmp_21_reg_471 = grp_fu_172_p1.read();
        tmp_25_reg_476 = grp_fu_175_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state6.read()))) {
        tmp_23_cast_reg_451 = imINPUT_q0.read().range(15, 8);
        tmp_28_cast_reg_456 = imINPUT_q0.read().range(23, 16);
        tmp_44_reg_446 = tmp_44_fu_238_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state18.read()))) {
        tmp_26_reg_491 = grp_fu_166_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state23.read()))) {
        tmp_27_reg_496 = grp_fu_157_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state17.read()))) {
        tmp_30_reg_486 = grp_fu_172_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read()) && !esl_seteq<1,1,1>(tmp_18_fu_213_p2.read(), ap_const_lv1_0))) {
        tmp_39_cast_reg_436 = tmp_39_cast_fu_233_p1.read();
    }
}

void imGrayScale::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read().range(0, 0);
}

void imGrayScale::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read().range(11, 11);
}

void imGrayScale::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read().range(12, 12);
}

void imGrayScale::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read().range(16, 16);
}

void imGrayScale::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read().range(17, 17);
}

void imGrayScale::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read().range(18, 18);
}

void imGrayScale::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read().range(1, 1);
}

void imGrayScale::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read().range(22, 22);
}

void imGrayScale::thread_ap_CS_fsm_state24() {
    ap_CS_fsm_state24 = ap_CS_fsm.read().range(23, 23);
}

void imGrayScale::thread_ap_CS_fsm_state28() {
    ap_CS_fsm_state28 = ap_CS_fsm.read().range(27, 27);
}

void imGrayScale::thread_ap_CS_fsm_state29() {
    ap_CS_fsm_state29 = ap_CS_fsm.read().range(28, 28);
}

void imGrayScale::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read().range(2, 2);
}

void imGrayScale::thread_ap_CS_fsm_state30() {
    ap_CS_fsm_state30 = ap_CS_fsm.read().range(29, 29);
}

void imGrayScale::thread_ap_CS_fsm_state31() {
    ap_CS_fsm_state31 = ap_CS_fsm.read().range(30, 30);
}

void imGrayScale::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read().range(3, 3);
}

void imGrayScale::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read().range(4, 4);
}

void imGrayScale::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read().range(5, 5);
}

void imGrayScale::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read().range(6, 6);
}

void imGrayScale::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_198_p2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void imGrayScale::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void imGrayScale::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_198_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void imGrayScale::thread_col_4_fu_218_p2() {
    col_4_fu_218_p2 = (!col_reg_146.read().is_01() || !ap_const_lv31_1.is_01())? sc_lv<31>(): (sc_biguint<31>(col_reg_146.read()) + sc_biguint<31>(ap_const_lv31_1));
}

void imGrayScale::thread_col_cast_fu_209_p1() {
    col_cast_fu_209_p1 = esl_zext<32,31>(col_reg_146.read());
}

void imGrayScale::thread_grp_fu_157_p0() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state24.read()))) {
        grp_fu_157_p0 = tmp_27_reg_496.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state19.read()))) {
        grp_fu_157_p0 = reg_178.read();
    } else {
        grp_fu_157_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void imGrayScale::thread_grp_fu_157_p1() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state24.read()))) {
        grp_fu_157_p1 = reg_178.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state19.read()))) {
        grp_fu_157_p1 = tmp_26_reg_491.read();
    } else {
        grp_fu_157_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void imGrayScale::thread_grp_fu_161_p0() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state18.read()))) {
        grp_fu_161_p0 = tmp_30_reg_486.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state13.read()))) {
        grp_fu_161_p0 = tmp_21_reg_471.read();
    } else {
        grp_fu_161_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void imGrayScale::thread_grp_fu_161_p1() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state18.read()))) {
        grp_fu_161_p1 = ap_const_lv64_3FE2C8B439581062;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state13.read()))) {
        grp_fu_161_p1 = ap_const_lv64_3FBD2F1A9FBE76C9;
    } else {
        grp_fu_161_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void imGrayScale::thread_grp_fu_172_p0() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state12.read()))) {
        grp_fu_172_p0 = tmp_29_cast_fu_270_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read()))) {
        grp_fu_172_p0 = tmp_20_cast_fu_262_p1.read();
    } else {
        grp_fu_172_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void imGrayScale::thread_grp_fu_175_p0() {
    grp_fu_175_p0 = esl_zext<32,8>(tmp_23_cast_reg_451.read());
}

void imGrayScale::thread_imINPUT_address0() {
    imINPUT_address0 =  (sc_lv<21>) (tmp_39_cast_fu_233_p1.read());
}

void imGrayScale::thread_imINPUT_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state6.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state5.read())))) {
        imINPUT_ce0 = ap_const_logic_1;
    } else {
        imINPUT_ce0 = ap_const_logic_0;
    }
}

void imGrayScale::thread_imOUTPUT_address0() {
    imOUTPUT_address0 =  (sc_lv<21>) (tmp_39_cast_reg_436.read());
}

void imGrayScale::thread_imOUTPUT_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state30.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state31.read())))) {
        imOUTPUT_ce0 = ap_const_logic_1;
    } else {
        imOUTPUT_ce0 = ap_const_logic_0;
    }
}

void imGrayScale::thread_imOUTPUT_d0() {
    imOUTPUT_d0 = esl_concat<24,8>(esl_concat<16,8>(esl_concat<8,8>(result_V_reg_512.read(), result_V_reg_512.read()), result_V_reg_512.read()), result_V_reg_512.read());
}

void imGrayScale::thread_imOUTPUT_we0() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state30.read())))) {
        imOUTPUT_we0 = ap_const_logic_1;
    } else {
        imOUTPUT_we0 = ap_const_logic_0;
    }
}

void imGrayScale::thread_isNeg_fu_312_p3() {
    isNeg_fu_312_p3 = sh_assign_fu_306_p2.read().range(11, 11);
}

void imGrayScale::thread_loc_V_3_fu_288_p1() {
    loc_V_3_fu_288_p1 = p_Val2_s_fu_274_p1.read().range(52-1, 0);
}

void imGrayScale::thread_next_mul_fu_188_p2() {
    next_mul_fu_188_p2 = (!ap_const_lv42_4B0.is_01() || !phi_mul_reg_135.read().is_01())? sc_lv<42>(): (sc_biguint<42>(ap_const_lv42_4B0) + sc_biguint<42>(phi_mul_reg_135.read()));
}

void imGrayScale::thread_p_Result_s_fu_292_p3() {
    p_Result_s_fu_292_p3 = esl_concat<1,52>(ap_const_lv1_1, loc_V_3_reg_507.read());
}

void imGrayScale::thread_p_Val2_s_fu_274_p1() {
    p_Val2_s_fu_274_p1 = grp_fu_157_p2.read();
}

void imGrayScale::thread_result_V_fu_383_p3() {
    result_V_fu_383_p3 = (!isNeg_fu_312_p3.read()[0].is_01())? sc_lv<8>(): ((isNeg_fu_312_p3.read()[0].to_bool())? tmp_35_fu_369_p1.read(): tmp_36_fu_373_p4.read());
}

void imGrayScale::thread_row_4_fu_203_p2() {
    row_4_fu_203_p2 = (!ap_const_lv31_1.is_01() || !row_reg_124.read().is_01())? sc_lv<31>(): (sc_biguint<31>(ap_const_lv31_1) + sc_biguint<31>(row_reg_124.read()));
}

void imGrayScale::thread_row_cast_fu_194_p1() {
    row_cast_fu_194_p1 = esl_zext<32,31>(row_reg_124.read());
}

void imGrayScale::thread_sh_assign_1_i_i_cast_fu_337_p1() {
    sh_assign_1_i_i_cast_fu_337_p1 = esl_sext<32,12>(sh_assign_3_fu_329_p3.read());
}

void imGrayScale::thread_sh_assign_3_fu_329_p3() {
    sh_assign_3_fu_329_p3 = (!isNeg_fu_312_p3.read()[0].is_01())? sc_lv<12>(): ((isNeg_fu_312_p3.read()[0].to_bool())? tmp_i_i_cast_fu_325_p1.read(): sh_assign_fu_306_p2.read());
}

void imGrayScale::thread_sh_assign_fu_306_p2() {
    sh_assign_fu_306_p2 = (!ap_const_lv12_C01.is_01() || !tmp_i_i_i_cast_fu_303_p1.read().is_01())? sc_lv<12>(): (sc_bigint<12>(ap_const_lv12_C01) + sc_biguint<12>(tmp_i_i_i_cast_fu_303_p1.read()));
}

void imGrayScale::thread_tmp_18_fu_213_p2() {
    tmp_18_fu_213_p2 = (!col_cast_fu_209_p1.read().is_01() || !imWidth.read().is_01())? sc_lv<1>(): (sc_bigint<32>(col_cast_fu_209_p1.read()) < sc_bigint<32>(imWidth.read()));
}

void imGrayScale::thread_tmp_20_cast_fu_262_p1() {
    tmp_20_cast_fu_262_p1 = esl_zext<32,8>(tmp_44_reg_446.read());
}

void imGrayScale::thread_tmp_29_cast_fu_270_p1() {
    tmp_29_cast_fu_270_p1 = esl_zext<32,8>(tmp_28_cast_reg_456.read());
}

void imGrayScale::thread_tmp_33_fu_228_p2() {
    tmp_33_fu_228_p2 = (!tmp_40_reg_410.read().is_01() || !tmp_43_fu_224_p1.read().is_01())? sc_lv<22>(): (sc_biguint<22>(tmp_40_reg_410.read()) + sc_biguint<22>(tmp_43_fu_224_p1.read()));
}

void imGrayScale::thread_tmp_35_fu_369_p1() {
    tmp_35_fu_369_p1 = esl_zext<8,1>(tmp_47_fu_361_p3.read());
}

void imGrayScale::thread_tmp_36_fu_373_p4() {
    tmp_36_fu_373_p4 = tmp_57_i_i_fu_355_p2.read().range(59, 52);
}

void imGrayScale::thread_tmp_39_cast_fu_233_p1() {
    tmp_39_cast_fu_233_p1 = esl_zext<64,22>(tmp_33_fu_228_p2.read());
}

void imGrayScale::thread_tmp_40_fu_184_p1() {
    tmp_40_fu_184_p1 = phi_mul_reg_135.read().range(22-1, 0);
}

void imGrayScale::thread_tmp_43_fu_224_p1() {
    tmp_43_fu_224_p1 = col_reg_146.read().range(22-1, 0);
}

void imGrayScale::thread_tmp_44_fu_238_p1() {
    tmp_44_fu_238_p1 = imINPUT_q0.read().range(8-1, 0);
}

void imGrayScale::thread_tmp_47_fu_361_p3() {
    tmp_47_fu_361_p3 = tmp_56_i_i_fu_349_p2.read().range(52, 52);
}

void imGrayScale::thread_tmp_55_i_i_cast_fu_345_p1() {
    tmp_55_i_i_cast_fu_345_p1 = esl_zext<53,32>(sh_assign_1_i_i_cast_fu_337_p1.read());
}

void imGrayScale::thread_tmp_55_i_i_fu_341_p1() {
    tmp_55_i_i_fu_341_p1 = esl_zext<112,32>(sh_assign_1_i_i_cast_fu_337_p1.read());
}

void imGrayScale::thread_tmp_56_i_i_fu_349_p2() {
    tmp_56_i_i_fu_349_p2 = (!tmp_55_i_i_cast_fu_345_p1.read().is_01())? sc_lv<53>(): p_Result_s_fu_292_p3.read() >> (unsigned short)tmp_55_i_i_cast_fu_345_p1.read().to_uint();
}

void imGrayScale::thread_tmp_57_i_i_fu_355_p2() {
    tmp_57_i_i_fu_355_p2 = (!tmp_55_i_i_fu_341_p1.read().is_01())? sc_lv<112>(): tmp_i_i_fu_299_p1.read() << (unsigned short)tmp_55_i_i_fu_341_p1.read().to_uint();
}

void imGrayScale::thread_tmp_fu_198_p2() {
    tmp_fu_198_p2 = (!row_cast_fu_194_p1.read().is_01() || !imHeight.read().is_01())? sc_lv<1>(): (sc_bigint<32>(row_cast_fu_194_p1.read()) < sc_bigint<32>(imHeight.read()));
}

void imGrayScale::thread_tmp_i_i_20_fu_320_p2() {
    tmp_i_i_20_fu_320_p2 = (!ap_const_lv11_3FF.is_01() || !loc_V_reg_501.read().is_01())? sc_lv<11>(): (sc_biguint<11>(ap_const_lv11_3FF) - sc_biguint<11>(loc_V_reg_501.read()));
}

void imGrayScale::thread_tmp_i_i_cast_fu_325_p1() {
    tmp_i_i_cast_fu_325_p1 = esl_sext<12,11>(tmp_i_i_20_fu_320_p2.read());
}

void imGrayScale::thread_tmp_i_i_fu_299_p1() {
    tmp_i_i_fu_299_p1 = esl_zext<112,53>(p_Result_s_fu_292_p3.read());
}

void imGrayScale::thread_tmp_i_i_i_cast_fu_303_p1() {
    tmp_i_i_i_cast_fu_303_p1 = esl_zext<12,11>(loc_V_reg_501.read());
}

void imGrayScale::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_198_p2.read())) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if (esl_seteq<1,1,1>(tmp_18_fu_213_p2.read(), ap_const_lv1_0)) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        case 134217728 : 
            ap_NS_fsm = ap_ST_fsm_state29;
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_fsm_state30;
            break;
        case 536870912 : 
            ap_NS_fsm = ap_ST_fsm_state31;
            break;
        case 1073741824 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<31>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

