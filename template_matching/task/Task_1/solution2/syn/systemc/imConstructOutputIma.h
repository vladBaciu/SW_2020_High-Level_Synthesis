// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _imConstructOutputIma_HH_
#define _imConstructOutputIma_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct imConstructOutputIma : public sc_module {
    // Port declarations 17
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<21> > imOUTPUT_address0;
    sc_out< sc_logic > imOUTPUT_ce0;
    sc_out< sc_logic > imOUTPUT_we0;
    sc_out< sc_lv<32> > imOUTPUT_d0;
    sc_out< sc_lv<21> > tplINPUT_address0;
    sc_out< sc_logic > tplINPUT_ce0;
    sc_in< sc_lv<32> > tplINPUT_q0;
    sc_in< sc_lv<32> > tplHeight;
    sc_in< sc_lv<32> > tplWidth;
    sc_in< sc_lv<32> > output_struct_x_read;
    sc_in< sc_lv<32> > output_struct_y_read;


    // Module declarations
    imConstructOutputIma(sc_module_name name);
    SC_HAS_PROCESS(imConstructOutputIma);

    ~imConstructOutputIma();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<7> > ap_CS_fsm;
    sc_signal< sc_lv<1> > ap_CS_fsm_state1;
    sc_signal< sc_lv<22> > tmp_92_fu_128_p1;
    sc_signal< sc_lv<22> > tmp_92_reg_243;
    sc_signal< sc_lv<1> > ap_CS_fsm_state2;
    sc_signal< sc_lv<42> > next_mul_fu_132_p2;
    sc_signal< sc_lv<42> > next_mul_reg_248;
    sc_signal< sc_lv<31> > row_5_fu_147_p2;
    sc_signal< sc_lv<31> > row_5_reg_256;
    sc_signal< sc_lv<22> > tmp_s_fu_166_p2;
    sc_signal< sc_lv<22> > tmp_s_reg_261;
    sc_signal< sc_lv<1> > tmp_fu_142_p2;
    sc_signal< sc_lv<31> > col_5_fu_181_p2;
    sc_signal< sc_lv<31> > col_5_reg_269;
    sc_signal< sc_lv<1> > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > tmp_51_fu_176_p2;
    sc_signal< sc_lv<22> > tmp_57_fu_214_p2;
    sc_signal< sc_lv<22> > tmp_57_reg_279;
    sc_signal< sc_lv<1> > ap_CS_fsm_state6;
    sc_signal< sc_lv<31> > row_reg_95;
    sc_signal< sc_lv<42> > phi_mul_reg_106;
    sc_signal< sc_lv<31> > col_reg_117;
    sc_signal< sc_lv<1> > ap_CS_fsm_state7;
    sc_signal< sc_lv<64> > tmp_63_cast_fu_196_p1;
    sc_signal< sc_lv<64> > tmp_64_cast_fu_219_p1;
    sc_signal< sc_lv<1> > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > ap_CS_fsm_state5;
    sc_signal< sc_lv<32> > row_cast_fu_138_p1;
    sc_signal< sc_lv<22> > tmp_94_fu_157_p1;
    sc_signal< sc_lv<22> > tmp_93_fu_153_p1;
    sc_signal< sc_lv<22> > tmp_95_fu_160_p2;
    sc_signal< sc_lv<32> > col_cast_fu_172_p1;
    sc_signal< sc_lv<22> > tmp_96_fu_187_p1;
    sc_signal< sc_lv<22> > tmp_56_fu_191_p2;
    sc_signal< sc_lv<22> > tmp_98_fu_205_p1;
    sc_signal< sc_lv<22> > tmp_97_fu_201_p1;
    sc_signal< sc_lv<22> > tmp_99_fu_208_p2;
    sc_signal< sc_lv<7> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<7> ap_ST_fsm_state1;
    static const sc_lv<7> ap_ST_fsm_state2;
    static const sc_lv<7> ap_ST_fsm_state3;
    static const sc_lv<7> ap_ST_fsm_state4;
    static const sc_lv<7> ap_ST_fsm_state5;
    static const sc_lv<7> ap_ST_fsm_state6;
    static const sc_lv<7> ap_ST_fsm_state7;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<31> ap_const_lv31_0;
    static const sc_lv<42> ap_const_lv42_0;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<42> ap_const_lv42_4B0;
    static const sc_lv<31> ap_const_lv31_1;
    static const sc_lv<22> ap_const_lv22_4B0;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_col_5_fu_181_p2();
    void thread_col_cast_fu_172_p1();
    void thread_imOUTPUT_address0();
    void thread_imOUTPUT_ce0();
    void thread_imOUTPUT_d0();
    void thread_imOUTPUT_we0();
    void thread_next_mul_fu_132_p2();
    void thread_row_5_fu_147_p2();
    void thread_row_cast_fu_138_p1();
    void thread_tmp_51_fu_176_p2();
    void thread_tmp_56_fu_191_p2();
    void thread_tmp_57_fu_214_p2();
    void thread_tmp_63_cast_fu_196_p1();
    void thread_tmp_64_cast_fu_219_p1();
    void thread_tmp_92_fu_128_p1();
    void thread_tmp_93_fu_153_p1();
    void thread_tmp_94_fu_157_p1();
    void thread_tmp_95_fu_160_p2();
    void thread_tmp_96_fu_187_p1();
    void thread_tmp_97_fu_201_p1();
    void thread_tmp_98_fu_205_p1();
    void thread_tmp_99_fu_208_p2();
    void thread_tmp_fu_142_p2();
    void thread_tmp_s_fu_166_p2();
    void thread_tplINPUT_address0();
    void thread_tplINPUT_ce0();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
