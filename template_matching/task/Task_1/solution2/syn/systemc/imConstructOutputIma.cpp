// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "imConstructOutputIma.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic imConstructOutputIma::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic imConstructOutputIma::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<7> imConstructOutputIma::ap_ST_fsm_state1 = "1";
const sc_lv<7> imConstructOutputIma::ap_ST_fsm_state2 = "10";
const sc_lv<7> imConstructOutputIma::ap_ST_fsm_state3 = "100";
const sc_lv<7> imConstructOutputIma::ap_ST_fsm_state4 = "1000";
const sc_lv<7> imConstructOutputIma::ap_ST_fsm_state5 = "10000";
const sc_lv<7> imConstructOutputIma::ap_ST_fsm_state6 = "100000";
const sc_lv<7> imConstructOutputIma::ap_ST_fsm_state7 = "1000000";
const sc_lv<32> imConstructOutputIma::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> imConstructOutputIma::ap_const_lv1_1 = "1";
const sc_lv<32> imConstructOutputIma::ap_const_lv32_1 = "1";
const sc_lv<1> imConstructOutputIma::ap_const_lv1_0 = "0";
const sc_lv<32> imConstructOutputIma::ap_const_lv32_2 = "10";
const sc_lv<32> imConstructOutputIma::ap_const_lv32_5 = "101";
const sc_lv<31> imConstructOutputIma::ap_const_lv31_0 = "0000000000000000000000000000000";
const sc_lv<42> imConstructOutputIma::ap_const_lv42_0 = "000000000000000000000000000000000000000000";
const sc_lv<32> imConstructOutputIma::ap_const_lv32_6 = "110";
const sc_lv<32> imConstructOutputIma::ap_const_lv32_3 = "11";
const sc_lv<32> imConstructOutputIma::ap_const_lv32_4 = "100";
const sc_lv<42> imConstructOutputIma::ap_const_lv42_4B0 = "10010110000";
const sc_lv<31> imConstructOutputIma::ap_const_lv31_1 = "1";
const sc_lv<22> imConstructOutputIma::ap_const_lv22_4B0 = "10010110000";

imConstructOutputIma::imConstructOutputIma(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_fu_142_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_fu_142_p2 );

    SC_METHOD(thread_col_5_fu_181_p2);
    sensitive << ( col_reg_117 );

    SC_METHOD(thread_col_cast_fu_172_p1);
    sensitive << ( col_reg_117 );

    SC_METHOD(thread_imOUTPUT_address0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_64_cast_fu_219_p1 );

    SC_METHOD(thread_imOUTPUT_ce0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_imOUTPUT_d0);
    sensitive << ( tplINPUT_q0 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_imOUTPUT_we0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_next_mul_fu_132_p2);
    sensitive << ( phi_mul_reg_106 );

    SC_METHOD(thread_row_5_fu_147_p2);
    sensitive << ( row_reg_95 );

    SC_METHOD(thread_row_cast_fu_138_p1);
    sensitive << ( row_reg_95 );

    SC_METHOD(thread_tmp_51_fu_176_p2);
    sensitive << ( tplWidth );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( col_cast_fu_172_p1 );

    SC_METHOD(thread_tmp_56_fu_191_p2);
    sensitive << ( tmp_92_reg_243 );
    sensitive << ( tmp_96_fu_187_p1 );

    SC_METHOD(thread_tmp_57_fu_214_p2);
    sensitive << ( tmp_s_reg_261 );
    sensitive << ( tmp_99_fu_208_p2 );

    SC_METHOD(thread_tmp_63_cast_fu_196_p1);
    sensitive << ( tmp_56_fu_191_p2 );

    SC_METHOD(thread_tmp_64_cast_fu_219_p1);
    sensitive << ( tmp_57_reg_279 );

    SC_METHOD(thread_tmp_92_fu_128_p1);
    sensitive << ( phi_mul_reg_106 );

    SC_METHOD(thread_tmp_93_fu_153_p1);
    sensitive << ( row_reg_95 );

    SC_METHOD(thread_tmp_94_fu_157_p1);
    sensitive << ( output_struct_y_read );

    SC_METHOD(thread_tmp_95_fu_160_p2);
    sensitive << ( tmp_94_fu_157_p1 );
    sensitive << ( tmp_93_fu_153_p1 );

    SC_METHOD(thread_tmp_96_fu_187_p1);
    sensitive << ( col_reg_117 );

    SC_METHOD(thread_tmp_97_fu_201_p1);
    sensitive << ( col_reg_117 );

    SC_METHOD(thread_tmp_98_fu_205_p1);
    sensitive << ( output_struct_x_read );

    SC_METHOD(thread_tmp_99_fu_208_p2);
    sensitive << ( tmp_98_fu_205_p1 );
    sensitive << ( tmp_97_fu_201_p1 );

    SC_METHOD(thread_tmp_fu_142_p2);
    sensitive << ( tplHeight );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( row_cast_fu_138_p1 );

    SC_METHOD(thread_tmp_s_fu_166_p2);
    sensitive << ( tmp_95_fu_160_p2 );

    SC_METHOD(thread_tplINPUT_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_63_cast_fu_196_p1 );

    SC_METHOD(thread_tplINPUT_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_fu_142_p2 );
    sensitive << ( tmp_51_fu_176_p2 );

    ap_CS_fsm = "0000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "imConstructOutputIma_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, imOUTPUT_address0, "(port)imOUTPUT_address0");
    sc_trace(mVcdFile, imOUTPUT_ce0, "(port)imOUTPUT_ce0");
    sc_trace(mVcdFile, imOUTPUT_we0, "(port)imOUTPUT_we0");
    sc_trace(mVcdFile, imOUTPUT_d0, "(port)imOUTPUT_d0");
    sc_trace(mVcdFile, tplINPUT_address0, "(port)tplINPUT_address0");
    sc_trace(mVcdFile, tplINPUT_ce0, "(port)tplINPUT_ce0");
    sc_trace(mVcdFile, tplINPUT_q0, "(port)tplINPUT_q0");
    sc_trace(mVcdFile, tplHeight, "(port)tplHeight");
    sc_trace(mVcdFile, tplWidth, "(port)tplWidth");
    sc_trace(mVcdFile, output_struct_x_read, "(port)output_struct_x_read");
    sc_trace(mVcdFile, output_struct_y_read, "(port)output_struct_y_read");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, tmp_92_fu_128_p1, "tmp_92_fu_128_p1");
    sc_trace(mVcdFile, tmp_92_reg_243, "tmp_92_reg_243");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, next_mul_fu_132_p2, "next_mul_fu_132_p2");
    sc_trace(mVcdFile, next_mul_reg_248, "next_mul_reg_248");
    sc_trace(mVcdFile, row_5_fu_147_p2, "row_5_fu_147_p2");
    sc_trace(mVcdFile, row_5_reg_256, "row_5_reg_256");
    sc_trace(mVcdFile, tmp_s_fu_166_p2, "tmp_s_fu_166_p2");
    sc_trace(mVcdFile, tmp_s_reg_261, "tmp_s_reg_261");
    sc_trace(mVcdFile, tmp_fu_142_p2, "tmp_fu_142_p2");
    sc_trace(mVcdFile, col_5_fu_181_p2, "col_5_fu_181_p2");
    sc_trace(mVcdFile, col_5_reg_269, "col_5_reg_269");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_51_fu_176_p2, "tmp_51_fu_176_p2");
    sc_trace(mVcdFile, tmp_57_fu_214_p2, "tmp_57_fu_214_p2");
    sc_trace(mVcdFile, tmp_57_reg_279, "tmp_57_reg_279");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, row_reg_95, "row_reg_95");
    sc_trace(mVcdFile, phi_mul_reg_106, "phi_mul_reg_106");
    sc_trace(mVcdFile, col_reg_117, "col_reg_117");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, tmp_63_cast_fu_196_p1, "tmp_63_cast_fu_196_p1");
    sc_trace(mVcdFile, tmp_64_cast_fu_219_p1, "tmp_64_cast_fu_219_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, row_cast_fu_138_p1, "row_cast_fu_138_p1");
    sc_trace(mVcdFile, tmp_94_fu_157_p1, "tmp_94_fu_157_p1");
    sc_trace(mVcdFile, tmp_93_fu_153_p1, "tmp_93_fu_153_p1");
    sc_trace(mVcdFile, tmp_95_fu_160_p2, "tmp_95_fu_160_p2");
    sc_trace(mVcdFile, col_cast_fu_172_p1, "col_cast_fu_172_p1");
    sc_trace(mVcdFile, tmp_96_fu_187_p1, "tmp_96_fu_187_p1");
    sc_trace(mVcdFile, tmp_56_fu_191_p2, "tmp_56_fu_191_p2");
    sc_trace(mVcdFile, tmp_98_fu_205_p1, "tmp_98_fu_205_p1");
    sc_trace(mVcdFile, tmp_97_fu_201_p1, "tmp_97_fu_201_p1");
    sc_trace(mVcdFile, tmp_99_fu_208_p2, "tmp_99_fu_208_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

imConstructOutputIma::~imConstructOutputIma() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void imConstructOutputIma::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read()))) {
        col_reg_117 = col_5_reg_269.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()) && 
                !esl_seteq<1,1,1>(tmp_fu_142_p2.read(), ap_const_lv1_0))) {
        col_reg_117 = ap_const_lv31_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_51_fu_176_p2.read()))) {
        phi_mul_reg_106 = next_mul_reg_248.read();
    } else if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        phi_mul_reg_106 = ap_const_lv42_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_51_fu_176_p2.read()))) {
        row_reg_95 = row_5_reg_256.read();
    } else if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        row_reg_95 = ap_const_lv31_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read()))) {
        col_5_reg_269 = col_5_fu_181_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()))) {
        next_mul_reg_248 = next_mul_fu_132_p2.read();
        row_5_reg_256 = row_5_fu_147_p2.read();
        tmp_92_reg_243 = tmp_92_fu_128_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_51_fu_176_p2.read()))) {
        tmp_57_reg_279 = tmp_57_fu_214_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()) && !esl_seteq<1,1,1>(tmp_fu_142_p2.read(), ap_const_lv1_0))) {
        tmp_s_reg_261 = tmp_s_fu_166_p2.read();
    }
}

void imConstructOutputIma::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read().range(0, 0);
}

void imConstructOutputIma::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read().range(1, 1);
}

void imConstructOutputIma::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read().range(2, 2);
}

void imConstructOutputIma::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read().range(3, 3);
}

void imConstructOutputIma::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read().range(4, 4);
}

void imConstructOutputIma::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read().range(5, 5);
}

void imConstructOutputIma::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read().range(6, 6);
}

void imConstructOutputIma::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(tmp_fu_142_p2.read(), ap_const_lv1_0)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void imConstructOutputIma::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void imConstructOutputIma::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(tmp_fu_142_p2.read(), ap_const_lv1_0))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void imConstructOutputIma::thread_col_5_fu_181_p2() {
    col_5_fu_181_p2 = (!col_reg_117.read().is_01() || !ap_const_lv31_1.is_01())? sc_lv<31>(): (sc_biguint<31>(col_reg_117.read()) + sc_biguint<31>(ap_const_lv31_1));
}

void imConstructOutputIma::thread_col_cast_fu_172_p1() {
    col_cast_fu_172_p1 = esl_zext<32,31>(col_reg_117.read());
}

void imConstructOutputIma::thread_imOUTPUT_address0() {
    imOUTPUT_address0 =  (sc_lv<21>) (tmp_64_cast_fu_219_p1.read());
}

void imConstructOutputIma::thread_imOUTPUT_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state6.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state7.read())))) {
        imOUTPUT_ce0 = ap_const_logic_1;
    } else {
        imOUTPUT_ce0 = ap_const_logic_0;
    }
}

void imConstructOutputIma::thread_imOUTPUT_d0() {
    imOUTPUT_d0 = tplINPUT_q0.read();
}

void imConstructOutputIma::thread_imOUTPUT_we0() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state6.read())))) {
        imOUTPUT_we0 = ap_const_logic_1;
    } else {
        imOUTPUT_we0 = ap_const_logic_0;
    }
}

void imConstructOutputIma::thread_next_mul_fu_132_p2() {
    next_mul_fu_132_p2 = (!ap_const_lv42_4B0.is_01() || !phi_mul_reg_106.read().is_01())? sc_lv<42>(): (sc_biguint<42>(ap_const_lv42_4B0) + sc_biguint<42>(phi_mul_reg_106.read()));
}

void imConstructOutputIma::thread_row_5_fu_147_p2() {
    row_5_fu_147_p2 = (!ap_const_lv31_1.is_01() || !row_reg_95.read().is_01())? sc_lv<31>(): (sc_biguint<31>(ap_const_lv31_1) + sc_biguint<31>(row_reg_95.read()));
}

void imConstructOutputIma::thread_row_cast_fu_138_p1() {
    row_cast_fu_138_p1 = esl_zext<32,31>(row_reg_95.read());
}

void imConstructOutputIma::thread_tmp_51_fu_176_p2() {
    tmp_51_fu_176_p2 = (!col_cast_fu_172_p1.read().is_01() || !tplWidth.read().is_01())? sc_lv<1>(): (sc_bigint<32>(col_cast_fu_172_p1.read()) < sc_bigint<32>(tplWidth.read()));
}

void imConstructOutputIma::thread_tmp_56_fu_191_p2() {
    tmp_56_fu_191_p2 = (!tmp_92_reg_243.read().is_01() || !tmp_96_fu_187_p1.read().is_01())? sc_lv<22>(): (sc_biguint<22>(tmp_92_reg_243.read()) + sc_biguint<22>(tmp_96_fu_187_p1.read()));
}

void imConstructOutputIma::thread_tmp_57_fu_214_p2() {
    tmp_57_fu_214_p2 = (!tmp_s_reg_261.read().is_01() || !tmp_99_fu_208_p2.read().is_01())? sc_lv<22>(): (sc_biguint<22>(tmp_s_reg_261.read()) + sc_biguint<22>(tmp_99_fu_208_p2.read()));
}

void imConstructOutputIma::thread_tmp_63_cast_fu_196_p1() {
    tmp_63_cast_fu_196_p1 = esl_zext<64,22>(tmp_56_fu_191_p2.read());
}

void imConstructOutputIma::thread_tmp_64_cast_fu_219_p1() {
    tmp_64_cast_fu_219_p1 = esl_sext<64,22>(tmp_57_reg_279.read());
}

void imConstructOutputIma::thread_tmp_92_fu_128_p1() {
    tmp_92_fu_128_p1 = phi_mul_reg_106.read().range(22-1, 0);
}

void imConstructOutputIma::thread_tmp_93_fu_153_p1() {
    tmp_93_fu_153_p1 = row_reg_95.read().range(22-1, 0);
}

void imConstructOutputIma::thread_tmp_94_fu_157_p1() {
    tmp_94_fu_157_p1 = output_struct_y_read.read().range(22-1, 0);
}

void imConstructOutputIma::thread_tmp_95_fu_160_p2() {
    tmp_95_fu_160_p2 = (!tmp_94_fu_157_p1.read().is_01() || !tmp_93_fu_153_p1.read().is_01())? sc_lv<22>(): (sc_biguint<22>(tmp_94_fu_157_p1.read()) + sc_biguint<22>(tmp_93_fu_153_p1.read()));
}

void imConstructOutputIma::thread_tmp_96_fu_187_p1() {
    tmp_96_fu_187_p1 = col_reg_117.read().range(22-1, 0);
}

void imConstructOutputIma::thread_tmp_97_fu_201_p1() {
    tmp_97_fu_201_p1 = col_reg_117.read().range(22-1, 0);
}

void imConstructOutputIma::thread_tmp_98_fu_205_p1() {
    tmp_98_fu_205_p1 = output_struct_x_read.read().range(22-1, 0);
}

void imConstructOutputIma::thread_tmp_99_fu_208_p2() {
    tmp_99_fu_208_p2 = (!tmp_98_fu_205_p1.read().is_01() || !tmp_97_fu_201_p1.read().is_01())? sc_lv<22>(): (sc_biguint<22>(tmp_98_fu_205_p1.read()) + sc_biguint<22>(tmp_97_fu_201_p1.read()));
}

void imConstructOutputIma::thread_tmp_fu_142_p2() {
    tmp_fu_142_p2 = (!row_cast_fu_138_p1.read().is_01() || !tplHeight.read().is_01())? sc_lv<1>(): (sc_bigint<32>(row_cast_fu_138_p1.read()) < sc_bigint<32>(tplHeight.read()));
}

void imConstructOutputIma::thread_tmp_s_fu_166_p2() {
    tmp_s_fu_166_p2 = (!ap_const_lv22_4B0.is_01() || !tmp_95_fu_160_p2.read().is_01())? sc_lv<22>(): sc_biguint<22>(ap_const_lv22_4B0) * sc_bigint<22>(tmp_95_fu_160_p2.read());
}

void imConstructOutputIma::thread_tplINPUT_address0() {
    tplINPUT_address0 =  (sc_lv<21>) (tmp_63_cast_fu_196_p1.read());
}

void imConstructOutputIma::thread_tplINPUT_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state6.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state5.read())))) {
        tplINPUT_ce0 = ap_const_logic_1;
    } else {
        tplINPUT_ce0 = ap_const_logic_0;
    }
}

void imConstructOutputIma::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if (esl_seteq<1,1,1>(tmp_fu_142_p2.read(), ap_const_lv1_0)) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_51_fu_176_p2.read())) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        default : 
            ap_NS_fsm = "XXXXXXX";
            break;
    }
}

}

